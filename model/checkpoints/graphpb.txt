node {
  name: "input_x1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 30
        }
      }
    }
  }
}
node {
  name: "input_x2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 30
        }
      }
    }
  }
}
node {
  name: "input_y"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "dropout_keep_prob"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Sign"
  op: "Sign"
  input: "input_x1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "Sign"
  input: "Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Sign_1"
  op: "Sign"
  input: "input_x2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "Sign_1"
  input: "Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "embedding/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4448
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "embedding/W"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4448
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "embedding/W/Assign"
  op: "Assign"
  input: "embedding/W"
  input: "embedding/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "embedding/W/read"
  op: "Identity"
  input: "embedding/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "embedding/embedding_lookup"
  op: "Gather"
  input: "embedding/W/read"
  input: "input_x1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "embedding/embedding_lookup_1"
  op: "Gather"
  input: "embedding/W/read"
  input: "input_x2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "embedding/dropout/keep_prob"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079
      }
    }
  }
}
node {
  name: "embedding/dropout/Shape"
  op: "Shape"
  input: "embedding/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "embedding/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "embedding/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "embedding/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "embedding/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 20
    }
  }
}
node {
  name: "embedding/dropout/random_uniform/sub"
  op: "Sub"
  input: "embedding/dropout/random_uniform/max"
  input: "embedding/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout/random_uniform/mul"
  op: "Mul"
  input: "embedding/dropout/random_uniform/RandomUniform"
  input: "embedding/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout/random_uniform"
  op: "Add"
  input: "embedding/dropout/random_uniform/mul"
  input: "embedding/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout/add"
  op: "Add"
  input: "embedding/dropout/keep_prob"
  input: "embedding/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout/Floor"
  op: "Floor"
  input: "embedding/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout/div"
  op: "RealDiv"
  input: "embedding/embedding_lookup"
  input: "embedding/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout/mul"
  op: "Mul"
  input: "embedding/dropout/div"
  input: "embedding/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout_1/keep_prob"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079
      }
    }
  }
}
node {
  name: "embedding/dropout_1/Shape"
  op: "Shape"
  input: "embedding/embedding_lookup_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "embedding/dropout_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "embedding/dropout_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "embedding/dropout_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "embedding/dropout_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 32
    }
  }
}
node {
  name: "embedding/dropout_1/random_uniform/sub"
  op: "Sub"
  input: "embedding/dropout_1/random_uniform/max"
  input: "embedding/dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout_1/random_uniform/mul"
  op: "Mul"
  input: "embedding/dropout_1/random_uniform/RandomUniform"
  input: "embedding/dropout_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout_1/random_uniform"
  op: "Add"
  input: "embedding/dropout_1/random_uniform/mul"
  input: "embedding/dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout_1/add"
  op: "Add"
  input: "embedding/dropout_1/keep_prob"
  input: "embedding/dropout_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout_1/Floor"
  op: "Floor"
  input: "embedding/dropout_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout_1/div"
  op: "RealDiv"
  input: "embedding/embedding_lookup_1"
  input: "embedding/dropout_1/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "embedding/dropout_1/mul"
  op: "Mul"
  input: "embedding/dropout_1/div"
  input: "embedding/dropout_1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "CNN/ExpandDims"
  op: "ExpandDims"
  input: "embedding/dropout/mul"
  input: "CNN/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\200\000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "CNN/conv-maxpool-2/W/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 45
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "CNN/conv-maxpool-2/W/Initializer/truncated_normal/TruncatedNormal"
  input: "CNN/conv-maxpool-2/W/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Initializer/truncated_normal"
  op: "Add"
  input: "CNN/conv-maxpool-2/W/Initializer/truncated_normal/mul"
  input: "CNN/conv-maxpool-2/W/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-2/W"
  input: "CNN/conv-maxpool-2/W/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/read"
  op: "Identity"
  input: "CNN/conv-maxpool-2/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-2/bias"
  input: "CNN/conv-maxpool-2/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias/read"
  op: "Identity"
  input: "CNN/conv-maxpool-2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/conv"
  op: "Conv2D"
  input: "CNN/ExpandDims"
  input: "CNN/conv-maxpool-2/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/BiasAdd"
  op: "BiasAdd"
  input: "CNN/conv-maxpool-2/conv"
  input: "CNN/conv-maxpool-2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/relu"
  op: "Relu"
  input: "CNN/conv-maxpool-2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/pool"
  op: "MaxPool"
  input: "CNN/conv-maxpool-2/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 29
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\200\000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "CNN/conv-maxpool-3/W/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 62
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "CNN/conv-maxpool-3/W/Initializer/truncated_normal/TruncatedNormal"
  input: "CNN/conv-maxpool-3/W/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Initializer/truncated_normal"
  op: "Add"
  input: "CNN/conv-maxpool-3/W/Initializer/truncated_normal/mul"
  input: "CNN/conv-maxpool-3/W/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-3/W"
  input: "CNN/conv-maxpool-3/W/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/read"
  op: "Identity"
  input: "CNN/conv-maxpool-3/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-3/bias"
  input: "CNN/conv-maxpool-3/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias/read"
  op: "Identity"
  input: "CNN/conv-maxpool-3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/conv"
  op: "Conv2D"
  input: "CNN/ExpandDims"
  input: "CNN/conv-maxpool-3/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/BiasAdd"
  op: "BiasAdd"
  input: "CNN/conv-maxpool-3/conv"
  input: "CNN/conv-maxpool-3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/relu"
  op: "Relu"
  input: "CNN/conv-maxpool-3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/pool"
  op: "MaxPool"
  input: "CNN/conv-maxpool-3/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 28
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\200\000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "CNN/conv-maxpool-4/W/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 79
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "CNN/conv-maxpool-4/W/Initializer/truncated_normal/TruncatedNormal"
  input: "CNN/conv-maxpool-4/W/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Initializer/truncated_normal"
  op: "Add"
  input: "CNN/conv-maxpool-4/W/Initializer/truncated_normal/mul"
  input: "CNN/conv-maxpool-4/W/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-4/W"
  input: "CNN/conv-maxpool-4/W/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/read"
  op: "Identity"
  input: "CNN/conv-maxpool-4/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-4/bias"
  input: "CNN/conv-maxpool-4/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias/read"
  op: "Identity"
  input: "CNN/conv-maxpool-4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/conv"
  op: "Conv2D"
  input: "CNN/ExpandDims"
  input: "CNN/conv-maxpool-4/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/BiasAdd"
  op: "BiasAdd"
  input: "CNN/conv-maxpool-4/conv"
  input: "CNN/conv-maxpool-4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/relu"
  op: "Relu"
  input: "CNN/conv-maxpool-4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/pool"
  op: "MaxPool"
  input: "CNN/conv-maxpool-4/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 27
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\200\000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "CNN/conv-maxpool-5/W/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 96
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "CNN/conv-maxpool-5/W/Initializer/truncated_normal/TruncatedNormal"
  input: "CNN/conv-maxpool-5/W/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Initializer/truncated_normal"
  op: "Add"
  input: "CNN/conv-maxpool-5/W/Initializer/truncated_normal/mul"
  input: "CNN/conv-maxpool-5/W/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-5/W"
  input: "CNN/conv-maxpool-5/W/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/read"
  op: "Identity"
  input: "CNN/conv-maxpool-5/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-5/bias"
  input: "CNN/conv-maxpool-5/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias/read"
  op: "Identity"
  input: "CNN/conv-maxpool-5/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/conv"
  op: "Conv2D"
  input: "CNN/ExpandDims"
  input: "CNN/conv-maxpool-5/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/BiasAdd"
  op: "BiasAdd"
  input: "CNN/conv-maxpool-5/conv"
  input: "CNN/conv-maxpool-5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/relu"
  op: "Relu"
  input: "CNN/conv-maxpool-5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/pool"
  op: "MaxPool"
  input: "CNN/conv-maxpool-5/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 26
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "CNN/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "CNN/concat"
  op: "ConcatV2"
  input: "CNN/conv-maxpool-2/pool"
  input: "CNN/conv-maxpool-3/pool"
  input: "CNN/conv-maxpool-4/pool"
  input: "CNN/conv-maxpool-5/pool"
  input: "CNN/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\220\001\000\000"
      }
    }
  }
}
node {
  name: "CNN/Reshape"
  op: "Reshape"
  input: "CNN/concat"
  input: "CNN/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/dropout/dropout/keep_prob"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079
      }
    }
  }
}
node {
  name: "CNN/dropout/dropout/Shape"
  op: "Shape"
  input: "CNN/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN/dropout/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/dropout/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "CNN/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 118
    }
  }
}
node {
  name: "CNN/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "CNN/dropout/dropout/random_uniform/max"
  input: "CNN/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "CNN/dropout/dropout/random_uniform/RandomUniform"
  input: "CNN/dropout/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/dropout/dropout/random_uniform"
  op: "Add"
  input: "CNN/dropout/dropout/random_uniform/mul"
  input: "CNN/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/dropout/dropout/add"
  op: "Add"
  input: "CNN/dropout/dropout/keep_prob"
  input: "CNN/dropout/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/dropout/dropout/Floor"
  op: "Floor"
  input: "CNN/dropout/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/dropout/dropout/div"
  op: "RealDiv"
  input: "CNN/Reshape"
  input: "CNN/dropout/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/dropout/dropout/mul"
  op: "Mul"
  input: "CNN/dropout/dropout/div"
  input: "CNN/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\220\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "CNN/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.106600359082
      }
    }
  }
}
node {
  name: "CNN/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.106600359082
      }
    }
  }
}
node {
  name: "CNN/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 129
    }
  }
}
node {
  name: "CNN/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "CNN/W/Initializer/random_uniform/max"
  input: "CNN/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
}
node {
  name: "CNN/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "CNN/W/Initializer/random_uniform/RandomUniform"
  input: "CNN/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
}
node {
  name: "CNN/W/Initializer/random_uniform"
  op: "Add"
  input: "CNN/W/Initializer/random_uniform/mul"
  input: "CNN/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
}
node {
  name: "CNN/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/W/Assign"
  op: "Assign"
  input: "CNN/W"
  input: "CNN/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/W/read"
  op: "Identity"
  input: "CNN/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
}
node {
  name: "CNN/output/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "CNN/output/b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/output/b/Assign"
  op: "Assign"
  input: "CNN/output/b"
  input: "CNN/output/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/output/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/output/b/read"
  op: "Identity"
  input: "CNN/output/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/output/b"
      }
    }
  }
}
node {
  name: "CNN/output/outputs/MatMul"
  op: "MatMul"
  input: "CNN/dropout/dropout/mul"
  input: "CNN/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "CNN/output/outputs"
  op: "BiasAdd"
  input: "CNN/output/outputs/MatMul"
  input: "CNN/output/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "CNN_1/ExpandDims"
  op: "ExpandDims"
  input: "embedding/dropout_1/mul"
  input: "CNN_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-2/conv"
  op: "Conv2D"
  input: "CNN_1/ExpandDims"
  input: "CNN/conv-maxpool-2/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-2/BiasAdd"
  op: "BiasAdd"
  input: "CNN_1/conv-maxpool-2/conv"
  input: "CNN/conv-maxpool-2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-2/relu"
  op: "Relu"
  input: "CNN_1/conv-maxpool-2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-2/pool"
  op: "MaxPool"
  input: "CNN_1/conv-maxpool-2/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 29
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-3/conv"
  op: "Conv2D"
  input: "CNN_1/ExpandDims"
  input: "CNN/conv-maxpool-3/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-3/BiasAdd"
  op: "BiasAdd"
  input: "CNN_1/conv-maxpool-3/conv"
  input: "CNN/conv-maxpool-3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-3/relu"
  op: "Relu"
  input: "CNN_1/conv-maxpool-3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-3/pool"
  op: "MaxPool"
  input: "CNN_1/conv-maxpool-3/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 28
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-4/conv"
  op: "Conv2D"
  input: "CNN_1/ExpandDims"
  input: "CNN/conv-maxpool-4/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-4/BiasAdd"
  op: "BiasAdd"
  input: "CNN_1/conv-maxpool-4/conv"
  input: "CNN/conv-maxpool-4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-4/relu"
  op: "Relu"
  input: "CNN_1/conv-maxpool-4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-4/pool"
  op: "MaxPool"
  input: "CNN_1/conv-maxpool-4/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 27
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-5/conv"
  op: "Conv2D"
  input: "CNN_1/ExpandDims"
  input: "CNN/conv-maxpool-5/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-5/BiasAdd"
  op: "BiasAdd"
  input: "CNN_1/conv-maxpool-5/conv"
  input: "CNN/conv-maxpool-5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-5/relu"
  op: "Relu"
  input: "CNN_1/conv-maxpool-5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN_1/conv-maxpool-5/pool"
  op: "MaxPool"
  input: "CNN_1/conv-maxpool-5/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 26
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "CNN_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "CNN_1/concat"
  op: "ConcatV2"
  input: "CNN_1/conv-maxpool-2/pool"
  input: "CNN_1/conv-maxpool-3/pool"
  input: "CNN_1/conv-maxpool-4/pool"
  input: "CNN_1/conv-maxpool-5/pool"
  input: "CNN_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\220\001\000\000"
      }
    }
  }
}
node {
  name: "CNN_1/Reshape"
  op: "Reshape"
  input: "CNN_1/concat"
  input: "CNN_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN_1/dropout/dropout/keep_prob"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079
      }
    }
  }
}
node {
  name: "CNN_1/dropout/dropout/Shape"
  op: "Shape"
  input: "CNN_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "CNN_1/dropout/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN_1/dropout/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "CNN_1/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "CNN_1/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 168
    }
  }
}
node {
  name: "CNN_1/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "CNN_1/dropout/dropout/random_uniform/max"
  input: "CNN_1/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN_1/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "CNN_1/dropout/dropout/random_uniform/RandomUniform"
  input: "CNN_1/dropout/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN_1/dropout/dropout/random_uniform"
  op: "Add"
  input: "CNN_1/dropout/dropout/random_uniform/mul"
  input: "CNN_1/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN_1/dropout/dropout/add"
  op: "Add"
  input: "CNN_1/dropout/dropout/keep_prob"
  input: "CNN_1/dropout/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN_1/dropout/dropout/Floor"
  op: "Floor"
  input: "CNN_1/dropout/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN_1/dropout/dropout/div"
  op: "RealDiv"
  input: "CNN_1/Reshape"
  input: "CNN_1/dropout/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN_1/dropout/dropout/mul"
  op: "Mul"
  input: "CNN_1/dropout/dropout/div"
  input: "CNN_1/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN_1/output/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "CNN_1/output/b"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN_1/output/b/Assign"
  op: "Assign"
  input: "CNN_1/output/b"
  input: "CNN_1/output/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN_1/output/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN_1/output/b/read"
  op: "Identity"
  input: "CNN_1/output/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN_1/output/b"
      }
    }
  }
}
node {
  name: "CNN_1/output/outputs/MatMul"
  op: "MatMul"
  input: "CNN_1/dropout/dropout/mul"
  input: "CNN/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "CNN_1/output/outputs"
  op: "BiasAdd"
  input: "CNN_1/output/outputs/MatMul"
  input: "CNN_1/output/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN/fw/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/fw/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/fw/DropoutWrapperInit_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/fw/DropoutWrapperInit_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bw/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bw/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bw/DropoutWrapperInit_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bw/DropoutWrapperInit_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/range"
  op: "Range"
  input: "RNN/bidirectional_rnn/fw/fw/range/start"
  input: "RNN/bidirectional_rnn/fw/fw/Rank"
  input: "RNN/bidirectional_rnn/fw/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/concat"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/fw/fw/concat/values_0"
  input: "RNN/bidirectional_rnn/fw/fw/range"
  input: "RNN/bidirectional_rnn/fw/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "embedding/dropout/mul"
  input: "RNN/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/sequence_length"
  op: "Identity"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "RNN/bidirectional_rnn/fw/fw/Shape"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/Const"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  op: "Fill"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/Const"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros"
  op: "Fill"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/fw/fw/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/stack"
  op: "Pack"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Equal"
  op: "Equal"
  input: "RNN/bidirectional_rnn/fw/fw/Shape_1"
  input: "RNN/bidirectional_rnn/fw/fw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/All"
  op: "All"
  input: "RNN/bidirectional_rnn/fw/fw/Equal"
  input: "RNN/bidirectional_rnn/fw/fw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor RNN/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor RNN/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Assert/Assert"
  op: "Assert"
  input: "RNN/bidirectional_rnn/fw/fw/All"
  input: "RNN/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  input: "RNN/bidirectional_rnn/fw/fw/stack"
  input: "RNN/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  input: "RNN/bidirectional_rnn/fw/fw/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/CheckSeqLen"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/fw/sequence_length"
  input: "^RNN/bidirectional_rnn/fw/fw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Shape_2"
  op: "Shape"
  input: "RNN/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/strided_slice_1"
  op: "StridedSlice"
  input: "RNN/bidirectional_rnn/fw/fw/Shape_2"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Shape_3"
  op: "Shape"
  input: "RNN/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/strided_slice_2"
  op: "StridedSlice"
  input: "RNN/bidirectional_rnn/fw/fw/Shape_3"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/ExpandDims"
  op: "ExpandDims"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice_2"
  input: "RNN/bidirectional_rnn/fw/fw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/concat_1"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/fw/fw/ExpandDims"
  input: "RNN/bidirectional_rnn/fw/fw/Const_1"
  input: "RNN/bidirectional_rnn/fw/fw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "RNN/bidirectional_rnn/fw/fw/concat_1"
  input: "RNN/bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Min"
  op: "Min"
  input: "RNN/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "RNN/bidirectional_rnn/fw/fw/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Max"
  op: "Max"
  input: "RNN/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "RNN/bidirectional_rnn/fw/fw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "RNN/bidirectional_rnn/fw/fw/transpose"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/transpose"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/fw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Enter_3"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Enter_4"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "RNN/bidirectional_rnn/fw/fw/while/Enter"
  input: "RNN/bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "RNN/bidirectional_rnn/fw/fw/while/Enter_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "RNN/bidirectional_rnn/fw/fw/while/Enter_2"
  input: "RNN/bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Merge_3"
  op: "Merge"
  input: "RNN/bidirectional_rnn/fw/fw/while/Enter_3"
  input: "RNN/bidirectional_rnn/fw/fw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Merge_4"
  op: "Merge"
  input: "RNN/bidirectional_rnn/fw/fw/while/Enter_4"
  input: "RNN/bidirectional_rnn/fw/fw/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "RNN/bidirectional_rnn/fw/fw/while/Merge"
  input: "RNN/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Less_1"
  op: "Less"
  input: "RNN/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "RNN/bidirectional_rnn/fw/fw/while/Less"
  input: "RNN/bidirectional_rnn/fw/fw/while/Less_1"
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "RNN/bidirectional_rnn/fw/fw/while/LogicalAnd"
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "RNN/bidirectional_rnn/fw/fw/while/Merge"
  input: "RNN/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "RNN/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "RNN/bidirectional_rnn/fw/fw/while/Merge_2"
  input: "RNN/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Switch_3"
  op: "Switch"
  input: "RNN/bidirectional_rnn/fw/fw/while/Merge_3"
  input: "RNN/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/while/Merge_3"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Switch_4"
  op: "Switch"
  input: "RNN/bidirectional_rnn/fw/fw/while/Merge_4"
  input: "RNN/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/while/Merge_4"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Identity_3"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/fw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Identity_4"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/fw/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity"
  input: "RNN/bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "RNN/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.118400558829
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.118400558829
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 302
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.135250449181
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.135250449181
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 316
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat/axis"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul"
  op: "MatMul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/Const"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/split/split_dim"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/split"
  op: "Split"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/split/split_dim"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/split"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat_1/axis"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat_1"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul_1"
  op: "MatMul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/Tanh"
  op: "Tanh"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/split:1"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/sub/x"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/sub/x"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/mul_2"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/sub"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/add"
  op: "Add"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/mul_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 353
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform"
  op: "Add"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add"
  op: "Add"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add/Enter"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add/Enter"
  op: "Enter"
  input: "dropout_keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/Floor"
  op: "Floor"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/div"
  op: "RealDiv"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/add"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/div"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.122474484146
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.122474484146
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 365
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.141421362758
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.141421362758
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 379
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat/axis"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul"
  op: "MatMul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/Const"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/split/split_dim"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/split"
  op: "Split"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/split/split_dim"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/split"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat_1/axis"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat_1"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul_1"
  op: "MatMul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/Tanh"
  op: "Tanh"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/mul_1"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/split:1"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/sub/x"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/sub/x"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/mul_2"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/sub"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/add"
  op: "Add"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/mul_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 416
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform"
  op: "Add"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/add"
  op: "Add"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add/Enter"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/Floor"
  op: "Floor"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/div"
  op: "RealDiv"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/add"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/div"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/fw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Select"
  op: "Select"
  input: "RNN/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "RNN/bidirectional_rnn/fw/fw/while/Select/Enter"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Select/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/fw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Select_1"
  op: "Select"
  input: "RNN/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/add"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/GreaterEqual_2"
  op: "GreaterEqual"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Select_2"
  op: "Select"
  input: "RNN/bidirectional_rnn/fw/fw/while/GreaterEqual_2"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/add"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "RNN/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/Select"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/add_1/y"
  op: "Const"
  input: "^RNN/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/add_1"
  op: "Add"
  input: "RNN/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "RNN/bidirectional_rnn/fw/fw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "RNN/bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "RNN/bidirectional_rnn/fw/fw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "RNN/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/NextIteration_3"
  op: "NextIteration"
  input: "RNN/bidirectional_rnn/fw/fw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/NextIteration_4"
  op: "NextIteration"
  input: "RNN/bidirectional_rnn/fw/fw/while/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "RNN/bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "RNN/bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "RNN/bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Exit_3"
  op: "Exit"
  input: "RNN/bidirectional_rnn/fw/fw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/while/Exit_4"
  op: "Exit"
  input: "RNN/bidirectional_rnn/fw/fw/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArray"
  input: "RNN/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArray"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "RNN/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/range_1"
  op: "Range"
  input: "RNN/bidirectional_rnn/fw/fw/range_1/start"
  input: "RNN/bidirectional_rnn/fw/fw/Rank_1"
  input: "RNN/bidirectional_rnn/fw/fw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/concat_2"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/fw/fw/concat_2/values_0"
  input: "RNN/bidirectional_rnn/fw/fw/range_1"
  input: "RNN/bidirectional_rnn/fw/fw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/fw/transpose_1"
  op: "Transpose"
  input: "RNN/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "RNN/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/ReverseSequence"
  op: "ReverseSequence"
  input: "embedding/dropout/mul"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/range"
  op: "Range"
  input: "RNN/bidirectional_rnn/bw/bw/range/start"
  input: "RNN/bidirectional_rnn/bw/bw/Rank"
  input: "RNN/bidirectional_rnn/bw/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/concat"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/bw/bw/concat/values_0"
  input: "RNN/bidirectional_rnn/bw/bw/range"
  input: "RNN/bidirectional_rnn/bw/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "RNN/bidirectional_rnn/bw/ReverseSequence"
  input: "RNN/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/sequence_length"
  op: "Identity"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "RNN/bidirectional_rnn/bw/bw/Shape"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/Const"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  op: "Fill"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/Const"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros"
  op: "Fill"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/stack"
  op: "Pack"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Equal"
  op: "Equal"
  input: "RNN/bidirectional_rnn/bw/bw/Shape_1"
  input: "RNN/bidirectional_rnn/bw/bw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/All"
  op: "All"
  input: "RNN/bidirectional_rnn/bw/bw/Equal"
  input: "RNN/bidirectional_rnn/bw/bw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor RNN/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor RNN/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Assert/Assert"
  op: "Assert"
  input: "RNN/bidirectional_rnn/bw/bw/All"
  input: "RNN/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  input: "RNN/bidirectional_rnn/bw/bw/stack"
  input: "RNN/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  input: "RNN/bidirectional_rnn/bw/bw/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/CheckSeqLen"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/bw/sequence_length"
  input: "^RNN/bidirectional_rnn/bw/bw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Shape_2"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  op: "StridedSlice"
  input: "RNN/bidirectional_rnn/bw/bw/Shape_2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Shape_3"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/strided_slice_2"
  op: "StridedSlice"
  input: "RNN/bidirectional_rnn/bw/bw/Shape_3"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/ExpandDims"
  op: "ExpandDims"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_2"
  input: "RNN/bidirectional_rnn/bw/bw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/concat_1"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/bw/bw/ExpandDims"
  input: "RNN/bidirectional_rnn/bw/bw/Const_1"
  input: "RNN/bidirectional_rnn/bw/bw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "RNN/bidirectional_rnn/bw/bw/concat_1"
  input: "RNN/bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Min"
  op: "Min"
  input: "RNN/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "RNN/bidirectional_rnn/bw/bw/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Max"
  op: "Max"
  input: "RNN/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "RNN/bidirectional_rnn/bw/bw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "RNN/bidirectional_rnn/bw/bw/transpose"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/transpose"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Enter_3"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Enter_4"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "RNN/bidirectional_rnn/bw/bw/while/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "RNN/bidirectional_rnn/bw/bw/while/Enter_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "RNN/bidirectional_rnn/bw/bw/while/Enter_2"
  input: "RNN/bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Merge_3"
  op: "Merge"
  input: "RNN/bidirectional_rnn/bw/bw/while/Enter_3"
  input: "RNN/bidirectional_rnn/bw/bw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Merge_4"
  op: "Merge"
  input: "RNN/bidirectional_rnn/bw/bw/while/Enter_4"
  input: "RNN/bidirectional_rnn/bw/bw/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "RNN/bidirectional_rnn/bw/bw/while/Merge"
  input: "RNN/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Less_1"
  op: "Less"
  input: "RNN/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "RNN/bidirectional_rnn/bw/bw/while/Less"
  input: "RNN/bidirectional_rnn/bw/bw/while/Less_1"
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "RNN/bidirectional_rnn/bw/bw/while/LogicalAnd"
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "RNN/bidirectional_rnn/bw/bw/while/Merge"
  input: "RNN/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "RNN/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "RNN/bidirectional_rnn/bw/bw/while/Merge_2"
  input: "RNN/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Switch_3"
  op: "Switch"
  input: "RNN/bidirectional_rnn/bw/bw/while/Merge_3"
  input: "RNN/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/Merge_3"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Switch_4"
  op: "Switch"
  input: "RNN/bidirectional_rnn/bw/bw/while/Merge_4"
  input: "RNN/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/Merge_4"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Identity_3"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/bw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Identity_4"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/bw/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity"
  input: "RNN/bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.118400558829
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.118400558829
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 573
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\344\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.135250449181
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.135250449181
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 587
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat/axis"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul"
  op: "MatMul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Const"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split/split_dim"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split"
  op: "Split"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split/split_dim"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1/axis"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1"
  op: "MatMul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh"
  op: "Tanh"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split:1"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub/x"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub/x"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
  op: "Add"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 624
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform"
  op: "Add"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add"
  op: "Add"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add/Enter"
  op: "Enter"
  input: "dropout_keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Floor"
  op: "Floor"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div"
  op: "RealDiv"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\310\000\000\000"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.122474484146
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.122474484146
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 636
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.141421362758
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.141421362758
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 650
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat/axis"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul"
  op: "MatMul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Const"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split/split_dim"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split"
  op: "Split"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split/split_dim"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1/axis"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1"
  op: "MatMul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh"
  op: "Tanh"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split:1"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub/x"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub/x"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add"
  op: "Add"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 687
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform"
  op: "Add"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/add"
  op: "Add"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/Floor"
  op: "Floor"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/div"
  op: "RealDiv"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/div"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Select"
  op: "Select"
  input: "RNN/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "RNN/bidirectional_rnn/bw/bw/while/Select/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Select/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Select_1"
  op: "Select"
  input: "RNN/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/GreaterEqual_2"
  op: "GreaterEqual"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Select_2"
  op: "Select"
  input: "RNN/bidirectional_rnn/bw/bw/while/GreaterEqual_2"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/Select"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/add_1/y"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/add_1"
  op: "Add"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "RNN/bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "RNN/bidirectional_rnn/bw/bw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/NextIteration_3"
  op: "NextIteration"
  input: "RNN/bidirectional_rnn/bw/bw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/NextIteration_4"
  op: "NextIteration"
  input: "RNN/bidirectional_rnn/bw/bw/while/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "RNN/bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "RNN/bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "RNN/bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Exit_3"
  op: "Exit"
  input: "RNN/bidirectional_rnn/bw/bw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/while/Exit_4"
  op: "Exit"
  input: "RNN/bidirectional_rnn/bw/bw/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArray"
  input: "RNN/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArray"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "RNN/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/range_1"
  op: "Range"
  input: "RNN/bidirectional_rnn/bw/bw/range_1/start"
  input: "RNN/bidirectional_rnn/bw/bw/Rank_1"
  input: "RNN/bidirectional_rnn/bw/bw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/concat_2"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/bw/bw/concat_2/values_0"
  input: "RNN/bidirectional_rnn/bw/bw/range_1"
  input: "RNN/bidirectional_rnn/bw/bw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/bw/transpose_1"
  op: "Transpose"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "RNN/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/ReverseSequence"
  op: "ReverseSequence"
  input: "RNN/bidirectional_rnn/bw/bw/transpose_1"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN/concat"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/fw/fw/transpose_1"
  input: "RNN/ReverseSequence"
  input: "RNN/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN/concat_1"
  op: "ConcatV2"
  input: "RNN/bidirectional_rnn/bw/bw/while/Exit_3"
  input: "RNN/bidirectional_rnn/bw/bw/while/Exit_4"
  input: "RNN/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/fw/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/fw/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/fw/DropoutWrapperInit_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/fw/DropoutWrapperInit_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bw/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bw/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bw/DropoutWrapperInit_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bw/DropoutWrapperInit_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/range"
  op: "Range"
  input: "RNN_1/bidirectional_rnn/fw/fw/range/start"
  input: "RNN_1/bidirectional_rnn/fw/fw/Rank"
  input: "RNN_1/bidirectional_rnn/fw/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/concat"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/fw/fw/concat/values_0"
  input: "RNN_1/bidirectional_rnn/fw/fw/range"
  input: "RNN_1/bidirectional_rnn/fw/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "embedding/dropout_1/mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/sequence_length"
  op: "Identity"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "RNN_1/bidirectional_rnn/fw/fw/Shape"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/Const"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  op: "Fill"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/Const"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros"
  op: "Fill"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/fw/fw/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/stack"
  op: "Pack"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Equal"
  op: "Equal"
  input: "RNN_1/bidirectional_rnn/fw/fw/Shape_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/All"
  op: "All"
  input: "RNN_1/bidirectional_rnn/fw/fw/Equal"
  input: "RNN_1/bidirectional_rnn/fw/fw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor RNN_1/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor RNN_1/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Assert/Assert"
  op: "Assert"
  input: "RNN_1/bidirectional_rnn/fw/fw/All"
  input: "RNN_1/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  input: "RNN_1/bidirectional_rnn/fw/fw/stack"
  input: "RNN_1/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  input: "RNN_1/bidirectional_rnn/fw/fw/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/CheckSeqLen"
  op: "Identity"
  input: "RNN_1/bidirectional_rnn/fw/fw/sequence_length"
  input: "^RNN_1/bidirectional_rnn/fw/fw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Shape_2"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_1"
  op: "StridedSlice"
  input: "RNN_1/bidirectional_rnn/fw/fw/Shape_2"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Shape_3"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_2"
  op: "StridedSlice"
  input: "RNN_1/bidirectional_rnn/fw/fw/Shape_3"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/ExpandDims"
  op: "ExpandDims"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_2"
  input: "RNN_1/bidirectional_rnn/fw/fw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/concat_1"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/fw/fw/ExpandDims"
  input: "RNN_1/bidirectional_rnn/fw/fw/Const_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "RNN_1/bidirectional_rnn/fw/fw/concat_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Min"
  op: "Min"
  input: "RNN_1/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "RNN_1/bidirectional_rnn/fw/fw/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Max"
  op: "Max"
  input: "RNN_1/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "RNN_1/bidirectional_rnn/fw/fw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "RNN_1/bidirectional_rnn/fw/fw/transpose"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/transpose"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Enter_3"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Enter_4"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Enter_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Enter_2"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Merge_3"
  op: "Merge"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Enter_3"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Merge_4"
  op: "Merge"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Enter_4"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Merge"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Less_1"
  op: "Less"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Less"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Less_1"
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/LogicalAnd"
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Merge"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Merge_2"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Switch_3"
  op: "Switch"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Merge_3"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/while/Merge_3"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Switch_4"
  op: "Switch"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Merge_4"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/while/Merge_4"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_3"
  op: "Identity"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_4"
  op: "Identity"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat/axis"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul"
  op: "MatMul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/Const"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/split/split_dim"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/split"
  op: "Split"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/split/split_dim"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/mul"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/split"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat_1/axis"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat_1"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul_1"
  op: "MatMul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/concat_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/MatMul_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/Tanh"
  op: "Tanh"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/split:1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/sub/x"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/sub"
  op: "Sub"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/sub/x"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/mul_2"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/sub"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/add"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/mul_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 879
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  op: "Sub"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add/Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add/Enter"
  op: "Enter"
  input: "dropout_keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/Floor"
  op: "Floor"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/div"
  op: "RealDiv"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/add"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/mul"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/div"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat/axis"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul"
  op: "MatMul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/Const"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/split/split_dim"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/split"
  op: "Split"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/split/split_dim"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/mul"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/split"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat_1/axis"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat_1"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul_1"
  op: "MatMul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/concat_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/MatMul_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/Tanh"
  op: "Tanh"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/mul_1"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/split:1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/sub/x"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/sub"
  op: "Sub"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/sub/x"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/mul_2"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/sub"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/add"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/mul_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 914
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/add"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add/Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/Floor"
  op: "Floor"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/div"
  op: "RealDiv"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/add"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/dropout/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/mul"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/div"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Select"
  op: "Select"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Select/Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Select/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Select_1"
  op: "Select"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_0/gru_cell/add"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/GreaterEqual_2"
  op: "GreaterEqual"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Select_2"
  op: "Select"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/GreaterEqual_2"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/gru_cell/add"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Select"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/while/fw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/add_1/y"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/add_1"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/NextIteration_3"
  op: "NextIteration"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/NextIteration_4"
  op: "NextIteration"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Exit_3"
  op: "Exit"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/while/Exit_4"
  op: "Exit"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArray"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArray"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "RNN_1/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/range_1"
  op: "Range"
  input: "RNN_1/bidirectional_rnn/fw/fw/range_1/start"
  input: "RNN_1/bidirectional_rnn/fw/fw/Rank_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/concat_2"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/fw/fw/concat_2/values_0"
  input: "RNN_1/bidirectional_rnn/fw/fw/range_1"
  input: "RNN_1/bidirectional_rnn/fw/fw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/fw/fw/transpose_1"
  op: "Transpose"
  input: "RNN_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "RNN_1/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/ReverseSequence"
  op: "ReverseSequence"
  input: "embedding/dropout_1/mul"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/range"
  op: "Range"
  input: "RNN_1/bidirectional_rnn/bw/bw/range/start"
  input: "RNN_1/bidirectional_rnn/bw/bw/Rank"
  input: "RNN_1/bidirectional_rnn/bw/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/concat"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/concat/values_0"
  input: "RNN_1/bidirectional_rnn/bw/bw/range"
  input: "RNN_1/bidirectional_rnn/bw/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "RNN_1/bidirectional_rnn/bw/ReverseSequence"
  input: "RNN_1/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/sequence_length"
  op: "Identity"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "RNN_1/bidirectional_rnn/bw/bw/Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/Const"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  op: "Fill"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/concat"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/Const"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros"
  op: "Fill"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/concat"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/stack"
  op: "Pack"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Equal"
  op: "Equal"
  input: "RNN_1/bidirectional_rnn/bw/bw/Shape_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/All"
  op: "All"
  input: "RNN_1/bidirectional_rnn/bw/bw/Equal"
  input: "RNN_1/bidirectional_rnn/bw/bw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor RNN_1/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor RNN_1/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Assert/Assert"
  op: "Assert"
  input: "RNN_1/bidirectional_rnn/bw/bw/All"
  input: "RNN_1/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  input: "RNN_1/bidirectional_rnn/bw/bw/stack"
  input: "RNN_1/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  input: "RNN_1/bidirectional_rnn/bw/bw/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/CheckSeqLen"
  op: "Identity"
  input: "RNN_1/bidirectional_rnn/bw/bw/sequence_length"
  input: "^RNN_1/bidirectional_rnn/bw/bw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Shape_2"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  op: "StridedSlice"
  input: "RNN_1/bidirectional_rnn/bw/bw/Shape_2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Shape_3"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_2"
  op: "StridedSlice"
  input: "RNN_1/bidirectional_rnn/bw/bw/Shape_3"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/ExpandDims"
  op: "ExpandDims"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_2"
  input: "RNN_1/bidirectional_rnn/bw/bw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/concat_1"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/ExpandDims"
  input: "RNN_1/bidirectional_rnn/bw/bw/Const_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "RNN_1/bidirectional_rnn/bw/bw/concat_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Min"
  op: "Min"
  input: "RNN_1/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "RNN_1/bidirectional_rnn/bw/bw/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Max"
  op: "Max"
  input: "RNN_1/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "RNN_1/bidirectional_rnn/bw/bw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "RNN_1/bidirectional_rnn/bw/bw/transpose"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/transpose"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Enter_3"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Enter_4"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Enter_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Enter_2"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Merge_3"
  op: "Merge"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Enter_3"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Merge_4"
  op: "Merge"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Enter_4"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Merge"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Less_1"
  op: "Less"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Less"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Less_1"
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/LogicalAnd"
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Merge"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Merge_2"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Switch_3"
  op: "Switch"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Merge_3"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/Merge_3"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Switch_4"
  op: "Switch"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Merge_4"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/Merge_4"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_3"
  op: "Identity"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_4"
  op: "Identity"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat/axis"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul"
  op: "MatMul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Const"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split/split_dim"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split"
  op: "Split"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split/split_dim"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1/axis"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1"
  op: "MatMul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh"
  op: "Tanh"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split:1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub/x"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub"
  op: "Sub"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub/x"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1094
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  op: "Sub"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add/Enter"
  op: "Enter"
  input: "dropout_keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Floor"
  op: "Floor"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div"
  op: "RealDiv"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat/axis"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul"
  op: "MatMul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Const"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split/split_dim"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split"
  op: "Split"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split/split_dim"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1/axis"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1"
  op: "MatMul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh"
  op: "Tanh"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split:1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub/x"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub"
  op: "Sub"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub/x"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1129
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/add"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/Floor"
  op: "Floor"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/div"
  op: "RealDiv"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/mul"
  op: "Mul"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/div"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Select"
  op: "Select"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Select/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Select/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Select_1"
  op: "Select"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual_2"
  op: "GreaterEqual"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Select_2"
  op: "Select"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual_2"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Select"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/add_1/y"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/add_1"
  op: "Add"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/NextIteration_3"
  op: "NextIteration"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/NextIteration_4"
  op: "NextIteration"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Exit_3"
  op: "Exit"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/while/Exit_4"
  op: "Exit"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArray"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArray"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/range_1"
  op: "Range"
  input: "RNN_1/bidirectional_rnn/bw/bw/range_1/start"
  input: "RNN_1/bidirectional_rnn/bw/bw/Rank_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/concat_2"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/concat_2/values_0"
  input: "RNN_1/bidirectional_rnn/bw/bw/range_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/bidirectional_rnn/bw/bw/transpose_1"
  op: "Transpose"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/ReverseSequence"
  op: "ReverseSequence"
  input: "RNN_1/bidirectional_rnn/bw/bw/transpose_1"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_1/concat"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/fw/fw/transpose_1"
  input: "RNN_1/ReverseSequence"
  input: "RNN_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_1/concat_1"
  op: "ConcatV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Exit_3"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Exit_4"
  input: "RNN_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "CNN/output/outputs"
  input: "RNN/concat_1"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "CNN_1/output/outputs"
  input: "RNN_1/concat_1"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "concat"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "euc-distance/mul"
  op: "Mul"
  input: "sub"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "euc-distance/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "euc-distance/Sum"
  op: "Sum"
  input: "euc-distance/mul"
  input: "euc-distance/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "euc-distance/Sqrt"
  op: "Sqrt"
  input: "euc-distance/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "euc-distance/Squeeze"
  op: "Squeeze"
  input: "euc-distance/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "norm/mul"
  op: "Mul"
  input: "concat"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "norm/Sum"
  op: "Sum"
  input: "norm/mul"
  input: "norm/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm/Sqrt"
  op: "Sqrt"
  input: "norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm/Squeeze"
  op: "Squeeze"
  input: "norm/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "norm_1/mul"
  op: "Mul"
  input: "concat_1"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm_1/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "norm_1/Sum"
  op: "Sum"
  input: "norm_1/mul"
  input: "norm_1/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_1/Sqrt"
  op: "Sqrt"
  input: "norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm_1/Squeeze"
  op: "Squeeze"
  input: "norm_1/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Add"
  op: "Add"
  input: "norm/Squeeze"
  input: "norm_1/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "div"
  op: "RealDiv"
  input: "euc-distance/Squeeze"
  input: "Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "euc/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "euc"
  op: "Sub"
  input: "euc/x"
  input: "div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "l2_normalize/Square"
  op: "Square"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "l2_normalize/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize/Sum"
  op: "Sum"
  input: "l2_normalize/Square"
  input: "l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "l2_normalize/Maximum"
  op: "Maximum"
  input: "l2_normalize/Sum"
  input: "l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "l2_normalize"
  op: "Mul"
  input: "concat"
  input: "l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "l2_normalize_1/Square"
  op: "Square"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "l2_normalize_1/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "l2_normalize_1/Sum"
  op: "Sum"
  input: "l2_normalize_1/Square"
  input: "l2_normalize_1/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize_1/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "l2_normalize_1/Maximum"
  op: "Maximum"
  input: "l2_normalize_1/Sum"
  input: "l2_normalize_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "l2_normalize_1/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "l2_normalize_1"
  op: "Mul"
  input: "concat_1"
  input: "l2_normalize_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mul"
  op: "Mul"
  input: "l2_normalize"
  input: "l2_normalize_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cosine/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cosine"
  op: "Sum"
  input: "Mul"
  input: "cosine/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "concat"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm_2/Abs"
  op: "Abs"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "norm_2/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "norm_2/Sum"
  op: "Sum"
  input: "norm_2/Abs"
  input: "norm_2/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "norm_2/Squeeze"
  op: "Squeeze"
  input: "norm_2/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Neg"
  op: "Neg"
  input: "norm_2/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "manhattan"
  op: "Exp"
  input: "Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Greater/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Greater"
  op: "Greater"
  input: "cosine"
  input: "Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_pred"
  op: "Cast"
  input: "Greater"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/sub"
  op: "Sub"
  input: "loss/sub/x"
  input: "cosine"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "loss/Pow"
  op: "Pow"
  input: "loss/sub"
  input: "loss/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/sub_1"
  op: "Sub"
  input: "cosine"
  input: "loss/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/Maximum"
  op: "Maximum"
  input: "loss/sub_1"
  input: "loss/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Square"
  op: "Square"
  input: "loss/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul_1"
  op: "Mul"
  input: "input_y"
  input: "loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/sub_2"
  op: "Sub"
  input: "loss/sub_2/x"
  input: "input_y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul_2"
  op: "Mul"
  input: "loss/sub_2"
  input: "loss/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add"
  op: "Add"
  input: "loss/mul_1"
  input: "loss/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Mean"
  op: "Mean"
  input: "loss/add"
  input: "loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/L2Loss"
  op: "L2Loss"
  input: "embedding/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_1"
  op: "L2Loss"
  input: "CNN/conv-maxpool-2/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_2"
  op: "L2Loss"
  input: "CNN/conv-maxpool-3/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_3"
  op: "L2Loss"
  input: "CNN/conv-maxpool-4/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_4"
  op: "L2Loss"
  input: "CNN/conv-maxpool-5/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_5"
  op: "L2Loss"
  input: "CNN/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_6"
  op: "L2Loss"
  input: "CNN/output/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_7"
  op: "L2Loss"
  input: "CNN_1/output/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_8"
  op: "L2Loss"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_9"
  op: "L2Loss"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_10"
  op: "L2Loss"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_11"
  op: "L2Loss"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_12"
  op: "L2Loss"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_13"
  op: "L2Loss"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_14"
  op: "L2Loss"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/L2Loss_15"
  op: "L2Loss"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Rank/packed"
  op: "Pack"
  input: "loss/L2Loss"
  input: "loss/L2Loss_1"
  input: "loss/L2Loss_2"
  input: "loss/L2Loss_3"
  input: "loss/L2Loss_4"
  input: "loss/L2Loss_5"
  input: "loss/L2Loss_6"
  input: "loss/L2Loss_7"
  input: "loss/L2Loss_8"
  input: "loss/L2Loss_9"
  input: "loss/L2Loss_10"
  input: "loss/L2Loss_11"
  input: "loss/L2Loss_12"
  input: "loss/L2Loss_13"
  input: "loss/L2Loss_14"
  input: "loss/L2Loss_15"
  attr {
    key: "N"
    value {
      i: 16
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/range"
  op: "Range"
  input: "loss/range/start"
  input: "loss/Rank"
  input: "loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Sum/input"
  op: "Pack"
  input: "loss/L2Loss"
  input: "loss/L2Loss_1"
  input: "loss/L2Loss_2"
  input: "loss/L2Loss_3"
  input: "loss/L2Loss_4"
  input: "loss/L2Loss_5"
  input: "loss/L2Loss_6"
  input: "loss/L2Loss_7"
  input: "loss/L2Loss_8"
  input: "loss/L2Loss_9"
  input: "loss/L2Loss_10"
  input: "loss/L2Loss_11"
  input: "loss/L2Loss_12"
  input: "loss/L2Loss_13"
  input: "loss/L2Loss_14"
  input: "loss/L2Loss_15"
  attr {
    key: "N"
    value {
      i: 16
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Sum"
  op: "Sum"
  input: "loss/Sum/input"
  input: "loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/mul_3"
  op: "Mul"
  input: "loss/mul_3/x"
  input: "loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add_1"
  op: "Add"
  input: "loss/Mean"
  input: "loss/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "input_y"
  input: "y_pred"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_nonzero/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_nonzero/NotEqual"
  op: "NotEqual"
  input: "mul"
  input: "count_nonzero/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_nonzero/ToInt64"
  op: "Cast"
  input: "count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "count_nonzero/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "count_nonzero/Sum"
  op: "Sum"
  input: "count_nonzero/ToInt64"
  input: "count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "count_nonzero/Cast"
  op: "Cast"
  input: "count_nonzero/Sum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "input_y"
  input: "sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_3"
  op: "Sub"
  input: "y_pred"
  input: "sub_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "sub_2"
  input: "sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_nonzero_1/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "mul_1"
  input: "count_nonzero_1/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_nonzero_1/ToInt64"
  op: "Cast"
  input: "count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "count_nonzero_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "count_nonzero_1/Sum"
  op: "Sum"
  input: "count_nonzero_1/ToInt64"
  input: "count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "count_nonzero_1/Cast"
  op: "Cast"
  input: "count_nonzero_1/Sum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "sub_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_4"
  op: "Sub"
  input: "input_y"
  input: "sub_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "y_pred"
  input: "sub_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_nonzero_2/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_nonzero_2/NotEqual"
  op: "NotEqual"
  input: "mul_2"
  input: "count_nonzero_2/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_nonzero_2/ToInt64"
  op: "Cast"
  input: "count_nonzero_2/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "count_nonzero_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "count_nonzero_2/Sum"
  op: "Sum"
  input: "count_nonzero_2/ToInt64"
  input: "count_nonzero_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "count_nonzero_2/Cast"
  op: "Cast"
  input: "count_nonzero_2/Sum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "sub_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_5"
  op: "Sub"
  input: "y_pred"
  input: "sub_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "sub_5"
  input: "input_y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_nonzero_3/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_nonzero_3/NotEqual"
  op: "NotEqual"
  input: "mul_3"
  input: "count_nonzero_3/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_nonzero_3/ToInt64"
  op: "Cast"
  input: "count_nonzero_3/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "count_nonzero_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "count_nonzero_3/Sum"
  op: "Sum"
  input: "count_nonzero_3/ToInt64"
  input: "count_nonzero_3/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "count_nonzero_3/Cast"
  op: "Cast"
  input: "count_nonzero_3/Sum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "count_nonzero/Cast"
  input: "count_nonzero_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "count_nonzero/Cast"
  input: "count_nonzero_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "add_1"
  input: "count_nonzero_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "add_2"
  input: "count_nonzero_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "accuracy"
  op: "RealDiv"
  input: "add"
  input: "add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_4"
  op: "Add"
  input: "count_nonzero/Cast"
  input: "count_nonzero_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "precision"
  op: "RealDiv"
  input: "count_nonzero/Cast"
  input: "add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_5"
  op: "Add"
  input: "count_nonzero/Cast"
  input: "count_nonzero_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "recall"
  op: "RealDiv"
  input: "count_nonzero/Cast"
  input: "add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confusion_matrix/Cast"
  op: "Cast"
  input: "y_pred"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confusion_matrix/Cast_1"
  op: "Cast"
  input: "input_y"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative/Const"
  input: "confusion_matrix/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/Cast_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/Cast_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/Cast_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency"
  op: "Identity"
  input: "confusion_matrix/Cast_1"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative_1/Const"
  input: "confusion_matrix/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/Cast"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/Cast"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast"
      }
    }
  }
}
node {
  name: "confusion_matrix/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/Max"
  op: "Max"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/Max_1"
  op: "Max"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/Maximum"
  op: "Maximum"
  input: "confusion_matrix/Max"
  input: "confusion_matrix/Max_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/add"
  op: "Add"
  input: "confusion_matrix/Maximum"
  input: "confusion_matrix/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/stack"
  op: "Pack"
  input: "confusion_matrix/add"
  input: "confusion_matrix/add"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "confusion_matrix/stack_1"
  op: "Pack"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "confusion_matrix/transpose/Rank"
  op: "Rank"
  input: "confusion_matrix/stack_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/transpose/sub"
  op: "Sub"
  input: "confusion_matrix/transpose/Rank"
  input: "confusion_matrix/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/transpose/Range"
  op: "Range"
  input: "confusion_matrix/transpose/Range/start"
  input: "confusion_matrix/transpose/Rank"
  input: "confusion_matrix/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/transpose/sub_1"
  op: "Sub"
  input: "confusion_matrix/transpose/sub"
  input: "confusion_matrix/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/transpose"
  op: "Transpose"
  input: "confusion_matrix/stack_1"
  input: "confusion_matrix/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Shape"
  op: "Shape"
  input: "confusion_matrix/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/ones_like"
  op: "Fill"
  input: "confusion_matrix/ones_like/Shape"
  input: "confusion_matrix/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ToInt32"
  op: "Cast"
  input: "confusion_matrix/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/zeros"
  op: "Fill"
  input: "confusion_matrix/ToInt32"
  input: "confusion_matrix/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/SparseTensorDenseAdd"
  op: "SparseTensorDenseAdd"
  input: "confusion_matrix/transpose"
  input: "confusion_matrix/ones_like"
  input: "confusion_matrix/stack"
  input: "confusion_matrix/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "mul_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "mul_4"
  op: "Mul"
  input: "mul_4/x"
  input: "precision"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_5"
  op: "Mul"
  input: "mul_4"
  input: "recall"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_6"
  op: "Add"
  input: "precision"
  input: "recall"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "F1_score"
  op: "RealDiv"
  input: "mul_5"
  input: "add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "ExponentialDecay/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast"
  op: "Cast"
  input: "global_step/read"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ExponentialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 156
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_1"
  op: "Cast"
  input: "ExponentialDecay/Cast_1/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ExponentialDecay/Cast_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "ExponentialDecay/truediv"
  op: "RealDiv"
  input: "ExponentialDecay/Cast"
  input: "ExponentialDecay/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ExponentialDecay/Floor"
  op: "Floor"
  input: "ExponentialDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ExponentialDecay/Pow"
  op: "Pow"
  input: "ExponentialDecay/Cast_2/x"
  input: "ExponentialDecay/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ExponentialDecay"
  op: "Mul"
  input: "ExponentialDecay/learning_rate"
  input: "ExponentialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/f_count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_1"
  op: "Enter"
  input: "gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge"
  op: "Merge"
  input: "gradients/f_count_1"
  input: "gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "gradients/Merge"
  input: "RNN/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add/y"
  op: "Const"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add"
  op: "Add"
  input: "gradients/Switch:1"
  input: "gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/NextIteration"
  op: "NextIteration"
  input: "gradients/Add"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count_2"
  op: "Exit"
  input: "gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/b_count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_1"
  op: "Enter"
  input: "gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_1"
  op: "Merge"
  input: "gradients/b_count_1"
  input: "gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/Merge_1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_2"
  op: "LoopCond"
  input: "gradients/GreaterEqual"
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "gradients/Merge_1"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sub"
  op: "Sub"
  input: "gradients/Switch_1:1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/NextIteration_1"
  op: "NextIteration"
  input: "gradients/Sub"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/b_count_3"
  op: "Exit"
  input: "gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_4"
  op: "Enter"
  input: "gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_2"
  op: "Merge"
  input: "gradients/f_count_4"
  input: "gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Switch_2"
  op: "Switch"
  input: "gradients/Merge_2"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Add_1/y"
  op: "Const"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_1"
  op: "Add"
  input: "gradients/Switch_2:1"
  input: "gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/NextIteration_2"
  op: "NextIteration"
  input: "gradients/Add_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count_5"
  op: "Exit"
  input: "gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/b_count_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_5"
  op: "Enter"
  input: "gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_3"
  op: "Merge"
  input: "gradients/b_count_5"
  input: "gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "gradients/Merge_3"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_6"
  op: "LoopCond"
  input: "gradients/GreaterEqual_1"
}
node {
  name: "gradients/Switch_3"
  op: "Switch"
  input: "gradients/Merge_3"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sub_1"
  op: "Sub"
  input: "gradients/Switch_3:1"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/NextIteration_3"
  op: "NextIteration"
  input: "gradients/Sub_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/b_count_7"
  op: "Exit"
  input: "gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Shape"
  op: "Shape"
  input: "loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/loss/Mean_grad/Reshape"
  input: "gradients/loss/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Shape_1"
  op: "Shape"
  input: "loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/loss/Mean_grad/Shape_1"
  input: "gradients/loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/loss/Mean_grad/Shape_2"
  input: "gradients/loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/loss/Mean_grad/Prod_1"
  input: "gradients/loss/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/loss/Mean_grad/Prod"
  input: "gradients/loss/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/loss/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/loss/Mean_grad/Tile"
  input: "gradients/loss/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/Fill"
  input: "loss/mul_3/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/add_grad/Shape"
  op: "Shape"
  input: "loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_grad/Shape_1"
  op: "Shape"
  input: "loss/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/add_grad/Shape"
  input: "gradients/loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_grad/Sum"
  op: "Sum"
  input: "gradients/loss/Mean_grad/truediv"
  input: "gradients/loss/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/add_grad/Sum"
  input: "gradients/loss/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/Mean_grad/truediv"
  input: "gradients/loss/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/add_grad/Sum_1"
  input: "gradients/loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/mul_3_grad/Mul_1"
  input: "gradients/loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/loss/Sum_grad/Reshape"
  input: "gradients/loss/Sum_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_1_grad/Shape"
  op: "Shape"
  input: "input_y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_1_grad/Shape_1"
  op: "Shape"
  input: "loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/mul_1_grad/Shape"
  input: "gradients/loss/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/loss/add_grad/Reshape"
  input: "loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/loss/mul_1_grad/mul"
  input: "gradients/loss/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/mul_1_grad/Sum"
  input: "gradients/loss/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_1_grad/mul_1"
  op: "Mul"
  input: "input_y"
  input: "gradients/loss/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/mul_1_grad/mul_1"
  input: "gradients/loss/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/mul_1_grad/Sum_1"
  input: "gradients/loss/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_2_grad/Shape"
  op: "Shape"
  input: "loss/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_2_grad/Shape_1"
  op: "Shape"
  input: "loss/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/mul_2_grad/Shape"
  input: "gradients/loss/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_2_grad/mul"
  op: "Mul"
  input: "gradients/loss/add_grad/Reshape_1"
  input: "loss/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/loss/mul_2_grad/mul"
  input: "gradients/loss/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/mul_2_grad/Sum"
  input: "gradients/loss/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_2_grad/mul_1"
  op: "Mul"
  input: "loss/sub_2"
  input: "gradients/loss/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/mul_2_grad/mul_1"
  input: "gradients/loss/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/mul_2_grad/Sum_1"
  input: "gradients/loss/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum/input_grad/unstack"
  op: "Unpack"
  input: "gradients/loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 16
    }
  }
}
node {
  name: "gradients/loss/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/mul_grad/Shape"
  input: "gradients/loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_grad/mul"
  op: "Mul"
  input: "gradients/loss/mul_1_grad/Reshape_1"
  input: "loss/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_grad/Sum"
  op: "Sum"
  input: "gradients/loss/mul_grad/mul"
  input: "gradients/loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/mul_grad/Sum"
  input: "gradients/loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_grad/mul_1"
  op: "Mul"
  input: "loss/mul/x"
  input: "gradients/loss/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/mul_grad/mul_1"
  input: "gradients/loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/mul_grad/Sum_1"
  input: "gradients/loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Square_grad/mul/x"
  op: "Const"
  input: "^gradients/loss/mul_2_grad/Reshape_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/loss/Square_grad/mul"
  op: "Mul"
  input: "gradients/loss/Square_grad/mul/x"
  input: "loss/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/loss/mul_2_grad/Reshape_1"
  input: "gradients/loss/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_grad/mul"
  op: "Mul"
  input: "embedding/W/read"
  input: "gradients/loss/Sum/input_grad/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_1_grad/mul"
  op: "Mul"
  input: "CNN/conv-maxpool-2/W/read"
  input: "gradients/loss/Sum/input_grad/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_2_grad/mul"
  op: "Mul"
  input: "CNN/conv-maxpool-3/W/read"
  input: "gradients/loss/Sum/input_grad/unstack:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_3_grad/mul"
  op: "Mul"
  input: "CNN/conv-maxpool-4/W/read"
  input: "gradients/loss/Sum/input_grad/unstack:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_4_grad/mul"
  op: "Mul"
  input: "CNN/conv-maxpool-5/W/read"
  input: "gradients/loss/Sum/input_grad/unstack:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_5_grad/mul"
  op: "Mul"
  input: "CNN/W/read"
  input: "gradients/loss/Sum/input_grad/unstack:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_6_grad/mul"
  op: "Mul"
  input: "CNN/output/b/read"
  input: "gradients/loss/Sum/input_grad/unstack:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_7_grad/mul"
  op: "Mul"
  input: "CNN_1/output/b/read"
  input: "gradients/loss/Sum/input_grad/unstack:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_8_grad/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  input: "gradients/loss/Sum/input_grad/unstack:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_9_grad/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  input: "gradients/loss/Sum/input_grad/unstack:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_10_grad/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  input: "gradients/loss/Sum/input_grad/unstack:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_11_grad/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  input: "gradients/loss/Sum/input_grad/unstack:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_12_grad/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  input: "gradients/loss/Sum/input_grad/unstack:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_13_grad/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  input: "gradients/loss/Sum/input_grad/unstack:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_14_grad/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  input: "gradients/loss/Sum/input_grad/unstack:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/L2Loss_15_grad/mul"
  op: "Mul"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  input: "gradients/loss/Sum/input_grad/unstack:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/Shape"
  op: "Shape"
  input: "loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/Pow_grad/Shape"
  input: "gradients/loss/Pow_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/mul"
  op: "Mul"
  input: "gradients/loss/mul_grad/Reshape_1"
  input: "loss/Pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/sub"
  op: "Sub"
  input: "loss/Pow/y"
  input: "gradients/loss/Pow_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/Pow"
  op: "Pow"
  input: "loss/sub"
  input: "gradients/loss/Pow_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/mul_1"
  op: "Mul"
  input: "gradients/loss/Pow_grad/mul"
  input: "gradients/loss/Pow_grad/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/Sum"
  op: "Sum"
  input: "gradients/loss/Pow_grad/mul_1"
  input: "gradients/loss/Pow_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/Pow_grad/Sum"
  input: "gradients/loss/Pow_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/Greater/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/Greater"
  op: "Greater"
  input: "loss/sub"
  input: "gradients/loss/Pow_grad/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/Log"
  op: "Log"
  input: "loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/zeros_like"
  op: "ZerosLike"
  input: "loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/Select"
  op: "Select"
  input: "gradients/loss/Pow_grad/Greater"
  input: "gradients/loss/Pow_grad/Log"
  input: "gradients/loss/Pow_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/mul_2"
  op: "Mul"
  input: "gradients/loss/mul_grad/Reshape_1"
  input: "loss/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/mul_3"
  op: "Mul"
  input: "gradients/loss/Pow_grad/mul_2"
  input: "gradients/loss/Pow_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/Pow_grad/mul_3"
  input: "gradients/loss/Pow_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Pow_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/Pow_grad/Sum_1"
  input: "gradients/loss/Pow_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/Shape"
  op: "Shape"
  input: "loss/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/loss/Square_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/loss/Maximum_grad/Shape_2"
  input: "gradients/loss/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/sub_1"
  input: "loss/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/Maximum_grad/Shape"
  input: "gradients/loss/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/Select"
  op: "Select"
  input: "gradients/loss/Maximum_grad/GreaterEqual"
  input: "gradients/loss/Square_grad/mul_1"
  input: "gradients/loss/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/loss/Maximum_grad/GreaterEqual"
  input: "gradients/loss/Maximum_grad/zeros"
  input: "gradients/loss/Square_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/loss/Maximum_grad/Select"
  input: "gradients/loss/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/Maximum_grad/Sum"
  input: "gradients/loss/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/Maximum_grad/Select_1"
  input: "gradients/loss/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/Maximum_grad/Sum_1"
  input: "gradients/loss/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/sub_grad/Shape_1"
  op: "Shape"
  input: "cosine"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/sub_grad/Shape"
  input: "gradients/loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_grad/Sum"
  op: "Sum"
  input: "gradients/loss/Pow_grad/Reshape"
  input: "gradients/loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/sub_grad/Sum"
  input: "gradients/loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/Pow_grad/Reshape"
  input: "gradients/loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/sub_grad/Neg"
  input: "gradients/loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_1_grad/Shape"
  op: "Shape"
  input: "cosine"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/sub_1_grad/Shape"
  input: "gradients/loss/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/loss/Maximum_grad/Reshape"
  input: "gradients/loss/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/sub_1_grad/Sum"
  input: "gradients/loss/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/Maximum_grad/Reshape"
  input: "gradients/loss/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/loss/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/sub_1_grad/Neg"
  input: "gradients/loss/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/loss/sub_grad/Reshape_1"
  input: "gradients/loss/sub_1_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/Shape"
  op: "Shape"
  input: "Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cosine_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/add"
  op: "Add"
  input: "cosine/reduction_indices"
  input: "gradients/cosine_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/mod"
  op: "FloorMod"
  input: "gradients/cosine_grad/add"
  input: "gradients/cosine_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/range"
  op: "Range"
  input: "gradients/cosine_grad/range/start"
  input: "gradients/cosine_grad/Size"
  input: "gradients/cosine_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/Fill"
  op: "Fill"
  input: "gradients/cosine_grad/Shape_1"
  input: "gradients/cosine_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/cosine_grad/range"
  input: "gradients/cosine_grad/mod"
  input: "gradients/cosine_grad/Shape"
  input: "gradients/cosine_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/Maximum"
  op: "Maximum"
  input: "gradients/cosine_grad/DynamicStitch"
  input: "gradients/cosine_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/cosine_grad/Shape"
  input: "gradients/cosine_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cosine_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/cosine_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN"
  input: "gradients/cosine_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cosine_grad/Tile"
  op: "Tile"
  input: "gradients/cosine_grad/Reshape"
  input: "gradients/cosine_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mul_grad/Shape"
  op: "Shape"
  input: "l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mul_grad/Shape_1"
  op: "Shape"
  input: "l2_normalize_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/Mul_grad/Shape"
  input: "gradients/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mul_grad/mul"
  op: "Mul"
  input: "gradients/cosine_grad/Tile"
  input: "l2_normalize_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/Mul_grad/mul"
  input: "gradients/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/Mul_grad/Sum"
  input: "gradients/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mul_grad/mul_1"
  op: "Mul"
  input: "l2_normalize"
  input: "gradients/cosine_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/Mul_grad/mul_1"
  input: "gradients/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/Mul_grad/Sum_1"
  input: "gradients/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_grad/Shape"
  op: "Shape"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_grad/Shape_1"
  op: "Shape"
  input: "l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/l2_normalize_grad/Shape"
  input: "gradients/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_grad/mul"
  op: "Mul"
  input: "gradients/Mul_grad/Reshape"
  input: "l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize_grad/Sum"
  op: "Sum"
  input: "gradients/l2_normalize_grad/mul"
  input: "gradients/l2_normalize_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/l2_normalize_grad/Reshape"
  op: "Reshape"
  input: "gradients/l2_normalize_grad/Sum"
  input: "gradients/l2_normalize_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_grad/mul_1"
  op: "Mul"
  input: "concat"
  input: "gradients/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize_grad/Sum_1"
  op: "Sum"
  input: "gradients/l2_normalize_grad/mul_1"
  input: "gradients/l2_normalize_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/l2_normalize_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/l2_normalize_grad/Sum_1"
  input: "gradients/l2_normalize_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1_grad/Shape"
  op: "Shape"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1_grad/Shape_1"
  op: "Shape"
  input: "l2_normalize_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/l2_normalize_1_grad/Shape"
  input: "gradients/l2_normalize_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1_grad/mul"
  op: "Mul"
  input: "gradients/Mul_grad/Reshape_1"
  input: "l2_normalize_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize_1_grad/Sum"
  op: "Sum"
  input: "gradients/l2_normalize_1_grad/mul"
  input: "gradients/l2_normalize_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/l2_normalize_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/l2_normalize_1_grad/Sum"
  input: "gradients/l2_normalize_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1_grad/mul_1"
  op: "Mul"
  input: "concat_1"
  input: "gradients/Mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/l2_normalize_1_grad/mul_1"
  input: "gradients/l2_normalize_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/l2_normalize_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/l2_normalize_1_grad/Sum_1"
  input: "gradients/l2_normalize_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "l2_normalize/Rsqrt"
  input: "gradients/l2_normalize_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "l2_normalize_1/Rsqrt"
  input: "gradients/l2_normalize_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/Shape"
  op: "Shape"
  input: "l2_normalize/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/l2_normalize/Maximum_grad/Shape_2"
  input: "gradients/l2_normalize/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "l2_normalize/Sum"
  input: "l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/l2_normalize/Maximum_grad/Shape"
  input: "gradients/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/Select"
  op: "Select"
  input: "gradients/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/l2_normalize/Rsqrt_grad/RsqrtGrad"
  input: "gradients/l2_normalize/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/l2_normalize/Maximum_grad/GreaterEqual"
  input: "gradients/l2_normalize/Maximum_grad/zeros"
  input: "gradients/l2_normalize/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/l2_normalize/Maximum_grad/Select"
  input: "gradients/l2_normalize/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/l2_normalize/Maximum_grad/Sum"
  input: "gradients/l2_normalize/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/l2_normalize/Maximum_grad/Select_1"
  input: "gradients/l2_normalize/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/l2_normalize/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/l2_normalize/Maximum_grad/Sum_1"
  input: "gradients/l2_normalize/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/Shape"
  op: "Shape"
  input: "l2_normalize_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/Shape_2"
  op: "Shape"
  input: "gradients/l2_normalize_1/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/l2_normalize_1/Maximum_grad/Shape_2"
  input: "gradients/l2_normalize_1/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "l2_normalize_1/Sum"
  input: "l2_normalize_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/l2_normalize_1/Maximum_grad/Shape"
  input: "gradients/l2_normalize_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/Select"
  op: "Select"
  input: "gradients/l2_normalize_1/Maximum_grad/GreaterEqual"
  input: "gradients/l2_normalize_1/Rsqrt_grad/RsqrtGrad"
  input: "gradients/l2_normalize_1/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/l2_normalize_1/Maximum_grad/GreaterEqual"
  input: "gradients/l2_normalize_1/Maximum_grad/zeros"
  input: "gradients/l2_normalize_1/Rsqrt_grad/RsqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/l2_normalize_1/Maximum_grad/Select"
  input: "gradients/l2_normalize_1/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/l2_normalize_1/Maximum_grad/Sum"
  input: "gradients/l2_normalize_1/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/l2_normalize_1/Maximum_grad/Select_1"
  input: "gradients/l2_normalize_1/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/l2_normalize_1/Maximum_grad/Sum_1"
  input: "gradients/l2_normalize_1/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/Shape"
  op: "Shape"
  input: "l2_normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/add"
  op: "Add"
  input: "l2_normalize/Sum/reduction_indices"
  input: "gradients/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/l2_normalize/Sum_grad/add"
  input: "gradients/l2_normalize/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/range"
  op: "Range"
  input: "gradients/l2_normalize/Sum_grad/range/start"
  input: "gradients/l2_normalize/Sum_grad/Size"
  input: "gradients/l2_normalize/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/l2_normalize/Sum_grad/Shape_1"
  input: "gradients/l2_normalize/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/l2_normalize/Sum_grad/range"
  input: "gradients/l2_normalize/Sum_grad/mod"
  input: "gradients/l2_normalize/Sum_grad/Shape"
  input: "gradients/l2_normalize/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/l2_normalize/Sum_grad/DynamicStitch"
  input: "gradients/l2_normalize/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/l2_normalize/Sum_grad/Shape"
  input: "gradients/l2_normalize/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/l2_normalize/Maximum_grad/Reshape"
  input: "gradients/l2_normalize/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/l2_normalize/Sum_grad/Reshape"
  input: "gradients/l2_normalize/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/Shape"
  op: "Shape"
  input: "l2_normalize_1/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/add"
  op: "Add"
  input: "l2_normalize_1/Sum/reduction_indices"
  input: "gradients/l2_normalize_1/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/l2_normalize_1/Sum_grad/add"
  input: "gradients/l2_normalize_1/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/range"
  op: "Range"
  input: "gradients/l2_normalize_1/Sum_grad/range/start"
  input: "gradients/l2_normalize_1/Sum_grad/Size"
  input: "gradients/l2_normalize_1/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/l2_normalize_1/Sum_grad/Shape_1"
  input: "gradients/l2_normalize_1/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/l2_normalize_1/Sum_grad/range"
  input: "gradients/l2_normalize_1/Sum_grad/mod"
  input: "gradients/l2_normalize_1/Sum_grad/Shape"
  input: "gradients/l2_normalize_1/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/l2_normalize_1/Sum_grad/DynamicStitch"
  input: "gradients/l2_normalize_1/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/l2_normalize_1/Sum_grad/Shape"
  input: "gradients/l2_normalize_1/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/l2_normalize_1/Maximum_grad/Reshape"
  input: "gradients/l2_normalize_1/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/l2_normalize_1/Sum_grad/Reshape"
  input: "gradients/l2_normalize_1/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/l2_normalize/Square_grad/mul/x"
  op: "Const"
  input: "^gradients/l2_normalize/Sum_grad/Tile"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/l2_normalize/Square_grad/mul"
  op: "Mul"
  input: "gradients/l2_normalize/Square_grad/mul/x"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/l2_normalize/Sum_grad/Tile"
  input: "gradients/l2_normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Square_grad/mul/x"
  op: "Const"
  input: "^gradients/l2_normalize_1/Sum_grad/Tile"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Square_grad/mul"
  op: "Mul"
  input: "gradients/l2_normalize_1/Square_grad/mul/x"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/l2_normalize_1/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/l2_normalize_1/Sum_grad/Tile"
  input: "gradients/l2_normalize_1/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/l2_normalize_grad/Reshape"
  input: "gradients/l2_normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/concat_grad/mod"
  op: "FloorMod"
  input: "concat/axis"
  input: "gradients/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/Shape"
  op: "Shape"
  input: "CNN/output/outputs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/ShapeN"
  op: "ShapeN"
  input: "CNN/output/outputs"
  input: "RNN/concat_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_grad/mod"
  input: "gradients/concat_grad/ShapeN"
  input: "gradients/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_grad/Slice"
  op: "Slice"
  input: "gradients/AddN_1"
  input: "gradients/concat_grad/ConcatOffset"
  input: "gradients/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/AddN_1"
  input: "gradients/concat_grad/ConcatOffset:1"
  input: "gradients/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/l2_normalize_1_grad/Reshape"
  input: "gradients/l2_normalize_1/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/l2_normalize_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/mod"
  op: "FloorMod"
  input: "concat_1/axis"
  input: "gradients/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_1_grad/Shape"
  op: "Shape"
  input: "CNN_1/output/outputs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "CNN_1/output/outputs"
  input: "RNN_1/concat_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_1_grad/mod"
  input: "gradients/concat_1_grad/ShapeN"
  input: "gradients/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/AddN_2"
  input: "gradients/concat_1_grad/ConcatOffset"
  input: "gradients/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/AddN_2"
  input: "gradients/concat_1_grad/ConcatOffset:1"
  input: "gradients/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/output/outputs_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/concat_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/RNN/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/RNN/concat_1_grad/mod"
  op: "FloorMod"
  input: "RNN/concat_1/axis"
  input: "gradients/RNN/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/concat_1_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "RNN/bidirectional_rnn/bw/bw/while/Exit_3"
  input: "RNN/bidirectional_rnn/bw/bw/while/Exit_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/RNN/concat_1_grad/mod"
  input: "gradients/RNN/concat_1_grad/ShapeN"
  input: "gradients/RNN/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/RNN/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/concat_grad/Slice_1"
  input: "gradients/RNN/concat_1_grad/ConcatOffset"
  input: "gradients/RNN/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/concat_grad/Slice_1"
  input: "gradients/RNN/concat_1_grad/ConcatOffset:1"
  input: "gradients/RNN/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/CNN_1/output/outputs_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/concat_1_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/RNN_1/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/RNN_1/concat_1_grad/mod"
  op: "FloorMod"
  input: "RNN_1/concat_1/axis"
  input: "gradients/RNN_1/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/concat_1_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Exit_3"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Exit_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/RNN_1/concat_1_grad/mod"
  input: "gradients/RNN_1/concat_1_grad/ShapeN"
  input: "gradients/RNN_1/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/RNN_1/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/concat_1_grad/Slice_1"
  input: "gradients/RNN_1/concat_1_grad/ConcatOffset"
  input: "gradients/RNN_1/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/concat_1_grad/Slice_1"
  input: "gradients/RNN_1/concat_1_grad/ConcatOffset:1"
  input: "gradients/RNN_1/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/CNN/output/outputs/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/concat_grad/Slice"
  input: "CNN/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN/output/outputs/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "CNN/dropout/dropout/mul"
  input: "gradients/concat_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/loss/L2Loss_6_grad/mul"
  input: "gradients/CNN/output/outputs_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_6_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/RNN/concat_1_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "gradients/RNN/concat_1_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/CNN_1/output/outputs/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/concat_1_grad/Slice"
  input: "CNN/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN_1/output/outputs/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "CNN_1/dropout/dropout/mul"
  input: "gradients/concat_1_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/loss/L2Loss_7_grad/mul"
  input: "gradients/CNN_1/output/outputs_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_7_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/RNN_1/concat_1_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "gradients/RNN_1/concat_1_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/mul_grad/Shape"
  op: "Shape"
  input: "CNN/dropout/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "CNN/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/CNN/dropout/dropout/mul_grad/Shape"
  input: "gradients/CNN/dropout/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/mul_grad/mul"
  op: "Mul"
  input: "gradients/CNN/output/outputs/MatMul_grad/MatMul"
  input: "CNN/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/CNN/dropout/dropout/mul_grad/mul"
  input: "gradients/CNN/dropout/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/CNN/dropout/dropout/mul_grad/Sum"
  input: "gradients/CNN/dropout/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "CNN/dropout/dropout/div"
  input: "gradients/CNN/output/outputs/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/CNN/dropout/dropout/mul_grad/mul_1"
  input: "gradients/CNN/dropout/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/CNN/dropout/dropout/mul_grad/Sum_1"
  input: "gradients/CNN/dropout/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Exit_4_grad/b_exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/mul_grad/Shape"
  op: "Shape"
  input: "CNN_1/dropout/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "CNN_1/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/CNN_1/dropout/dropout/mul_grad/Shape"
  input: "gradients/CNN_1/dropout/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/mul_grad/mul"
  op: "Mul"
  input: "gradients/CNN_1/output/outputs/MatMul_grad/MatMul"
  input: "CNN_1/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/CNN_1/dropout/dropout/mul_grad/mul"
  input: "gradients/CNN_1/dropout/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/CNN_1/dropout/dropout/mul_grad/Sum"
  input: "gradients/CNN_1/dropout/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "CNN_1/dropout/dropout/div"
  input: "gradients/CNN_1/output/outputs/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/CNN_1/dropout/dropout/mul_grad/mul_1"
  input: "gradients/CNN_1/dropout/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/CNN_1/dropout/dropout/mul_grad/Sum_1"
  input: "gradients/CNN_1/dropout/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/loss/L2Loss_5_grad/mul"
  input: "gradients/CNN/output/outputs/MatMul_grad/MatMul_1"
  input: "gradients/CNN_1/output/outputs/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_5_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Exit_4_grad/b_exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/div_grad/Shape"
  op: "Shape"
  input: "CNN/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/CNN/dropout/dropout/div_grad/Shape"
  input: "gradients/CNN/dropout/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/CNN/dropout/dropout/mul_grad/Reshape"
  input: "CNN/dropout/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/div_grad/Sum"
  op: "Sum"
  input: "gradients/CNN/dropout/dropout/div_grad/RealDiv"
  input: "gradients/CNN/dropout/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/CNN/dropout/dropout/div_grad/Sum"
  input: "gradients/CNN/dropout/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/div_grad/Neg"
  op: "Neg"
  input: "CNN/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/CNN/dropout/dropout/div_grad/Neg"
  input: "CNN/dropout/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/CNN/dropout/dropout/div_grad/RealDiv_1"
  input: "CNN/dropout/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/div_grad/mul"
  op: "Mul"
  input: "gradients/CNN/dropout/dropout/mul_grad/Reshape"
  input: "gradients/CNN/dropout/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/CNN/dropout/dropout/div_grad/mul"
  input: "gradients/CNN/dropout/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/CNN/dropout/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/CNN/dropout/dropout/div_grad/Sum_1"
  input: "gradients/CNN/dropout/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/div_grad/Shape"
  op: "Shape"
  input: "CNN_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/CNN_1/dropout/dropout/div_grad/Shape"
  input: "gradients/CNN_1/dropout/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/CNN_1/dropout/dropout/mul_grad/Reshape"
  input: "CNN_1/dropout/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/div_grad/Sum"
  op: "Sum"
  input: "gradients/CNN_1/dropout/dropout/div_grad/RealDiv"
  input: "gradients/CNN_1/dropout/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/CNN_1/dropout/dropout/div_grad/Sum"
  input: "gradients/CNN_1/dropout/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/div_grad/Neg"
  op: "Neg"
  input: "CNN_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/CNN_1/dropout/dropout/div_grad/Neg"
  input: "CNN_1/dropout/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/CNN_1/dropout/dropout/div_grad/RealDiv_1"
  input: "CNN_1/dropout/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/div_grad/mul"
  op: "Mul"
  input: "gradients/CNN_1/dropout/dropout/mul_grad/Reshape"
  input: "gradients/CNN_1/dropout/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/CNN_1/dropout/dropout/div_grad/mul"
  input: "gradients/CNN_1/dropout/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/CNN_1/dropout/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/CNN_1/dropout/dropout/div_grad/Sum_1"
  input: "gradients/CNN_1/dropout/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/b_sync"
  op: "ControlTrigger"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Enter_4_grad/Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  op: "Select"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/GreaterEqual_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
  op: "Select"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState/GRUCellZeroState/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/b_sync"
  op: "ControlTrigger"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Enter_4_grad/Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/MultiRNNCellZeroState/DropoutWrapperZeroState_1/GRUCellZeroState/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  op: "Select"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/GreaterEqual_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
  op: "Select"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Sum_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Sum_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Sum_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split:1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/mul_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Sum_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Neg"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Neg"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/mul/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/Reshape_grad/Shape"
  op: "Shape"
  input: "CNN/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/CNN/dropout/dropout/div_grad/Reshape"
  input: "gradients/CNN/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/CNN_1/Reshape_grad/Shape"
  op: "Shape"
  input: "CNN_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/CNN_1/dropout/dropout/div_grad/Reshape"
  input: "gradients/CNN_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/CNN/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/CNN/concat_grad/mod"
  op: "FloorMod"
  input: "CNN/concat/axis"
  input: "gradients/CNN/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/concat_grad/Shape"
  op: "Shape"
  input: "CNN/conv-maxpool-2/pool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/concat_grad/ShapeN"
  op: "ShapeN"
  input: "CNN/conv-maxpool-2/pool"
  input: "CNN/conv-maxpool-3/pool"
  input: "CNN/conv-maxpool-4/pool"
  input: "CNN/conv-maxpool-5/pool"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/CNN/concat_grad/mod"
  input: "gradients/CNN/concat_grad/ShapeN"
  input: "gradients/CNN/concat_grad/ShapeN:1"
  input: "gradients/CNN/concat_grad/ShapeN:2"
  input: "gradients/CNN/concat_grad/ShapeN:3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
}
node {
  name: "gradients/CNN/concat_grad/Slice"
  op: "Slice"
  input: "gradients/CNN/Reshape_grad/Reshape"
  input: "gradients/CNN/concat_grad/ConcatOffset"
  input: "gradients/CNN/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/CNN/Reshape_grad/Reshape"
  input: "gradients/CNN/concat_grad/ConcatOffset:1"
  input: "gradients/CNN/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/concat_grad/Slice_2"
  op: "Slice"
  input: "gradients/CNN/Reshape_grad/Reshape"
  input: "gradients/CNN/concat_grad/ConcatOffset:2"
  input: "gradients/CNN/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/concat_grad/Slice_3"
  op: "Slice"
  input: "gradients/CNN/Reshape_grad/Reshape"
  input: "gradients/CNN/concat_grad/ConcatOffset:3"
  input: "gradients/CNN/concat_grad/ShapeN:3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/CNN_1/concat_grad/mod"
  op: "FloorMod"
  input: "CNN_1/concat/axis"
  input: "gradients/CNN_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/concat_grad/Shape"
  op: "Shape"
  input: "CNN_1/conv-maxpool-2/pool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "CNN_1/conv-maxpool-2/pool"
  input: "CNN_1/conv-maxpool-3/pool"
  input: "CNN_1/conv-maxpool-4/pool"
  input: "CNN_1/conv-maxpool-5/pool"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/CNN_1/concat_grad/mod"
  input: "gradients/CNN_1/concat_grad/ShapeN"
  input: "gradients/CNN_1/concat_grad/ShapeN:1"
  input: "gradients/CNN_1/concat_grad/ShapeN:2"
  input: "gradients/CNN_1/concat_grad/ShapeN:3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
}
node {
  name: "gradients/CNN_1/concat_grad/Slice"
  op: "Slice"
  input: "gradients/CNN_1/Reshape_grad/Reshape"
  input: "gradients/CNN_1/concat_grad/ConcatOffset"
  input: "gradients/CNN_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/CNN_1/Reshape_grad/Reshape"
  input: "gradients/CNN_1/concat_grad/ConcatOffset:1"
  input: "gradients/CNN_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/concat_grad/Slice_2"
  op: "Slice"
  input: "gradients/CNN_1/Reshape_grad/Reshape"
  input: "gradients/CNN_1/concat_grad/ConcatOffset:2"
  input: "gradients/CNN_1/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/concat_grad/Slice_3"
  op: "Slice"
  input: "gradients/CNN_1/Reshape_grad/Reshape"
  input: "gradients/CNN_1/concat_grad/ConcatOffset:3"
  input: "gradients/CNN_1/concat_grad/ShapeN:3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-2/pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "CNN/conv-maxpool-2/relu"
  input: "CNN/conv-maxpool-2/pool"
  input: "gradients/CNN/concat_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 29
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-3/pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "CNN/conv-maxpool-3/relu"
  input: "CNN/conv-maxpool-3/pool"
  input: "gradients/CNN/concat_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 28
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-4/pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "CNN/conv-maxpool-4/relu"
  input: "CNN/conv-maxpool-4/pool"
  input: "gradients/CNN/concat_grad/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 27
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-5/pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "CNN/conv-maxpool-5/relu"
  input: "CNN/conv-maxpool-5/pool"
  input: "gradients/CNN/concat_grad/Slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 26
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/mod/Const"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/mod/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Enter_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/mod"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ConcatOffset"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-2/pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "CNN_1/conv-maxpool-2/relu"
  input: "CNN_1/conv-maxpool-2/pool"
  input: "gradients/CNN_1/concat_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 29
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-3/pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "CNN_1/conv-maxpool-3/relu"
  input: "CNN_1/conv-maxpool-3/pool"
  input: "gradients/CNN_1/concat_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 28
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-4/pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "CNN_1/conv-maxpool-4/relu"
  input: "CNN_1/conv-maxpool-4/pool"
  input: "gradients/CNN_1/concat_grad/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 27
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-5/pool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "CNN_1/conv-maxpool-5/relu"
  input: "CNN_1/conv-maxpool-5/pool"
  input: "gradients/CNN_1/concat_grad/Slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 26
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/mod/Const"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/mod/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Enter_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/mod"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ConcatOffset"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-2/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/CNN/conv-maxpool-2/pool_grad/MaxPoolGrad"
  input: "CNN/conv-maxpool-2/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-3/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/CNN/conv-maxpool-3/pool_grad/MaxPoolGrad"
  input: "CNN/conv-maxpool-3/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-4/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/CNN/conv-maxpool-4/pool_grad/MaxPoolGrad"
  input: "CNN/conv-maxpool-4/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-5/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/CNN/conv-maxpool-5/pool_grad/MaxPoolGrad"
  input: "CNN/conv-maxpool-5/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-2/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/CNN_1/conv-maxpool-2/pool_grad/MaxPoolGrad"
  input: "CNN_1/conv-maxpool-2/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-3/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/CNN_1/conv-maxpool-3/pool_grad/MaxPoolGrad"
  input: "CNN_1/conv-maxpool-3/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-4/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/CNN_1/conv-maxpool-4/pool_grad/MaxPoolGrad"
  input: "CNN_1/conv-maxpool-4/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-5/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/CNN_1/conv-maxpool-5/pool_grad/MaxPoolGrad"
  input: "CNN_1/conv-maxpool-5/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/mul_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/loss/L2Loss_15_grad/mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_15_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/CNN/conv-maxpool-2/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/CNN/conv-maxpool-3/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/CNN/conv-maxpool-4/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/CNN/conv-maxpool-5/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape"
  input: "gradients/AddN_8"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/CNN_1/conv-maxpool-2/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/CNN_1/conv-maxpool-3/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/CNN_1/conv-maxpool-4/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/CNN_1/conv-maxpool-5/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape"
  input: "gradients/AddN_9"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-2/conv_grad/ShapeN"
  op: "ShapeN"
  input: "CNN/ExpandDims"
  input: "CNN/conv-maxpool-2/W/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-2/conv_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\200\000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-2/conv_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/CNN/conv-maxpool-2/conv_grad/ShapeN"
  input: "CNN/conv-maxpool-2/W/read"
  input: "gradients/CNN/conv-maxpool-2/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-2/conv_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "CNN/ExpandDims"
  input: "gradients/CNN/conv-maxpool-2/conv_grad/Const"
  input: "gradients/CNN/conv-maxpool-2/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-3/conv_grad/ShapeN"
  op: "ShapeN"
  input: "CNN/ExpandDims"
  input: "CNN/conv-maxpool-3/W/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-3/conv_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\200\000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-3/conv_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/CNN/conv-maxpool-3/conv_grad/ShapeN"
  input: "CNN/conv-maxpool-3/W/read"
  input: "gradients/CNN/conv-maxpool-3/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-3/conv_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "CNN/ExpandDims"
  input: "gradients/CNN/conv-maxpool-3/conv_grad/Const"
  input: "gradients/CNN/conv-maxpool-3/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-4/conv_grad/ShapeN"
  op: "ShapeN"
  input: "CNN/ExpandDims"
  input: "CNN/conv-maxpool-4/W/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-4/conv_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\200\000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-4/conv_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/CNN/conv-maxpool-4/conv_grad/ShapeN"
  input: "CNN/conv-maxpool-4/W/read"
  input: "gradients/CNN/conv-maxpool-4/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-4/conv_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "CNN/ExpandDims"
  input: "gradients/CNN/conv-maxpool-4/conv_grad/Const"
  input: "gradients/CNN/conv-maxpool-4/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-5/conv_grad/ShapeN"
  op: "ShapeN"
  input: "CNN/ExpandDims"
  input: "CNN/conv-maxpool-5/W/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-5/conv_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\200\000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-5/conv_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/CNN/conv-maxpool-5/conv_grad/ShapeN"
  input: "CNN/conv-maxpool-5/W/read"
  input: "gradients/CNN/conv-maxpool-5/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN/conv-maxpool-5/conv_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "CNN/ExpandDims"
  input: "gradients/CNN/conv-maxpool-5/conv_grad/Const"
  input: "gradients/CNN/conv-maxpool-5/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-2/conv_grad/ShapeN"
  op: "ShapeN"
  input: "CNN_1/ExpandDims"
  input: "CNN/conv-maxpool-2/W/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-2/conv_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\002\000\000\000\200\000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-2/conv_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/CNN_1/conv-maxpool-2/conv_grad/ShapeN"
  input: "CNN/conv-maxpool-2/W/read"
  input: "gradients/CNN_1/conv-maxpool-2/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-2/conv_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "CNN_1/ExpandDims"
  input: "gradients/CNN_1/conv-maxpool-2/conv_grad/Const"
  input: "gradients/CNN_1/conv-maxpool-2/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/CNN/conv-maxpool-2/BiasAdd_grad/BiasAddGrad"
  input: "gradients/CNN_1/conv-maxpool-2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-3/conv_grad/ShapeN"
  op: "ShapeN"
  input: "CNN_1/ExpandDims"
  input: "CNN/conv-maxpool-3/W/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-3/conv_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\200\000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-3/conv_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/CNN_1/conv-maxpool-3/conv_grad/ShapeN"
  input: "CNN/conv-maxpool-3/W/read"
  input: "gradients/CNN_1/conv-maxpool-3/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-3/conv_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "CNN_1/ExpandDims"
  input: "gradients/CNN_1/conv-maxpool-3/conv_grad/Const"
  input: "gradients/CNN_1/conv-maxpool-3/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/CNN/conv-maxpool-3/BiasAdd_grad/BiasAddGrad"
  input: "gradients/CNN_1/conv-maxpool-3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-4/conv_grad/ShapeN"
  op: "ShapeN"
  input: "CNN_1/ExpandDims"
  input: "CNN/conv-maxpool-4/W/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-4/conv_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\200\000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-4/conv_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/CNN_1/conv-maxpool-4/conv_grad/ShapeN"
  input: "CNN/conv-maxpool-4/W/read"
  input: "gradients/CNN_1/conv-maxpool-4/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-4/conv_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "CNN_1/ExpandDims"
  input: "gradients/CNN_1/conv-maxpool-4/conv_grad/Const"
  input: "gradients/CNN_1/conv-maxpool-4/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/CNN/conv-maxpool-4/BiasAdd_grad/BiasAddGrad"
  input: "gradients/CNN_1/conv-maxpool-4/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-5/conv_grad/ShapeN"
  op: "ShapeN"
  input: "CNN_1/ExpandDims"
  input: "CNN/conv-maxpool-5/W/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-5/conv_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\200\000\000\000\001\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-5/conv_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/CNN_1/conv-maxpool-5/conv_grad/ShapeN"
  input: "CNN/conv-maxpool-5/W/read"
  input: "gradients/CNN_1/conv-maxpool-5/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/CNN_1/conv-maxpool-5/conv_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "CNN_1/ExpandDims"
  input: "gradients/CNN_1/conv-maxpool-5/conv_grad/Const"
  input: "gradients/CNN_1/conv-maxpool-5/relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/CNN/conv-maxpool-5/BiasAdd_grad/BiasAddGrad"
  input: "gradients/CNN_1/conv-maxpool-5/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/CNN/conv-maxpool-2/conv_grad/Conv2DBackpropInput"
  input: "gradients/CNN/conv-maxpool-3/conv_grad/Conv2DBackpropInput"
  input: "gradients/CNN/conv-maxpool-4/conv_grad/Conv2DBackpropInput"
  input: "gradients/CNN/conv-maxpool-5/conv_grad/Conv2DBackpropInput"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-2/conv_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/CNN/ExpandDims_grad/Shape"
  op: "Shape"
  input: "embedding/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_14"
  input: "gradients/CNN/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/loss/L2Loss_1_grad/mul"
  input: "gradients/CNN/conv-maxpool-2/conv_grad/Conv2DBackpropFilter"
  input: "gradients/CNN_1/conv-maxpool-2/conv_grad/Conv2DBackpropFilter"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_1_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/loss/L2Loss_2_grad/mul"
  input: "gradients/CNN/conv-maxpool-3/conv_grad/Conv2DBackpropFilter"
  input: "gradients/CNN_1/conv-maxpool-3/conv_grad/Conv2DBackpropFilter"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_2_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/loss/L2Loss_3_grad/mul"
  input: "gradients/CNN/conv-maxpool-4/conv_grad/Conv2DBackpropFilter"
  input: "gradients/CNN_1/conv-maxpool-4/conv_grad/Conv2DBackpropFilter"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_3_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/CNN_1/conv-maxpool-2/conv_grad/Conv2DBackpropInput"
  input: "gradients/CNN_1/conv-maxpool-3/conv_grad/Conv2DBackpropInput"
  input: "gradients/CNN_1/conv-maxpool-4/conv_grad/Conv2DBackpropInput"
  input: "gradients/CNN_1/conv-maxpool-5/conv_grad/Conv2DBackpropInput"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN_1/conv-maxpool-2/conv_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/CNN_1/ExpandDims_grad/Shape"
  op: "Shape"
  input: "embedding/dropout_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/CNN_1/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_18"
  input: "gradients/CNN_1/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/loss/L2Loss_4_grad/mul"
  input: "gradients/CNN/conv-maxpool-5/conv_grad/Conv2DBackpropFilter"
  input: "gradients/CNN_1/conv-maxpool-5/conv_grad/Conv2DBackpropFilter"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_4_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/mod/Const"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/mod/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/mod"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ConcatOffset"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ConcatOffset:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/mod/Const"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/mod/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/mod"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ConcatOffset"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ConcatOffset:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul"
  op: "Mul"
  input: "gradients/AddN_21"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Floor"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPopV2"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul"
  op: "Mul"
  input: "gradients/AddN_23"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/Floor"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPopV2"
  input: "gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/loss/L2Loss_14_grad/mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_14_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add/Enter"
  input: "^RNN/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Enter"
  op: "Enter"
  input: "dropout_keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  op: "Neg"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/add/Enter"
  input: "^RNN_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Enter"
  op: "Enter"
  input: "dropout_keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  op: "Neg"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_26"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_26"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Sum_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_27"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_27"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Sum_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Sum_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split:1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/mul_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Sum_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Neg"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Neg"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/mul/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/mod/Const"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/mod/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Enter_1"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/mod"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ConcatOffset"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/mod/Const"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/mod/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Enter_1"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/mod"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ConcatOffset"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/mul_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/loss/L2Loss_13_grad/mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_13_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape"
  input: "gradients/AddN_30"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape"
  input: "gradients/AddN_31"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/mod/Const"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/mod/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Shape"
  op: "Shape"
  input: "RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/mod"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ConcatOffset"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ConcatOffset:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/mod/Const"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/mod/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Shape"
  op: "Shape"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/mod"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ConcatOffset"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ConcatOffset:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "gradients/AddN_33"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  op: "StackV2"
  input: "RNN/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "RNN/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/AddN_35"
  op: "AddN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "gradients/AddN_35"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  op: "StackV2"
  input: "RNN_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "RNN_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/AddN_36"
  op: "AddN"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/AddN_37"
  op: "AddN"
  input: "gradients/loss/L2Loss_12_grad/mul"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_12_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "RNN/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "RNN_1/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/RNN/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "gradients/RNN/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/RNN_1/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "gradients/RNN_1/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/AddN_38"
  op: "AddN"
  input: "gradients/CNN/ExpandDims_grad/Reshape"
  input: "gradients/RNN/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/embedding/dropout/mul_grad/Shape"
  op: "Shape"
  input: "embedding/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "embedding/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/embedding/dropout/mul_grad/Shape"
  input: "gradients/embedding/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout/mul_grad/mul"
  op: "Mul"
  input: "gradients/AddN_38"
  input: "embedding/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/embedding/dropout/mul_grad/mul"
  input: "gradients/embedding/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/embedding/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/embedding/dropout/mul_grad/Sum"
  input: "gradients/embedding/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "embedding/dropout/div"
  input: "gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/embedding/dropout/mul_grad/mul_1"
  input: "gradients/embedding/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/embedding/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/embedding/dropout/mul_grad/Sum_1"
  input: "gradients/embedding/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_39"
  op: "AddN"
  input: "gradients/CNN_1/ExpandDims_grad/Reshape"
  input: "gradients/RNN_1/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN_1/ExpandDims_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/mul_grad/Shape"
  op: "Shape"
  input: "embedding/dropout_1/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/mul_grad/Shape_1"
  op: "Shape"
  input: "embedding/dropout_1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/embedding/dropout_1/mul_grad/Shape"
  input: "gradients/embedding/dropout_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/mul_grad/mul"
  op: "Mul"
  input: "gradients/AddN_39"
  input: "embedding/dropout_1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/embedding/dropout_1/mul_grad/mul"
  input: "gradients/embedding/dropout_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/embedding/dropout_1/mul_grad/Sum"
  input: "gradients/embedding/dropout_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/mul_grad/mul_1"
  op: "Mul"
  input: "embedding/dropout_1/div"
  input: "gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/embedding/dropout_1/mul_grad/mul_1"
  input: "gradients/embedding/dropout_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/embedding/dropout_1/mul_grad/Sum_1"
  input: "gradients/embedding/dropout_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout/div_grad/Shape"
  op: "Shape"
  input: "embedding/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/embedding/dropout/div_grad/Shape"
  input: "gradients/embedding/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/embedding/dropout/mul_grad/Reshape"
  input: "embedding/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout/div_grad/Sum"
  op: "Sum"
  input: "gradients/embedding/dropout/div_grad/RealDiv"
  input: "gradients/embedding/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/embedding/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/embedding/dropout/div_grad/Sum"
  input: "gradients/embedding/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout/div_grad/Neg"
  op: "Neg"
  input: "embedding/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/embedding/dropout/div_grad/Neg"
  input: "embedding/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/embedding/dropout/div_grad/RealDiv_1"
  input: "embedding/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout/div_grad/mul"
  op: "Mul"
  input: "gradients/embedding/dropout/mul_grad/Reshape"
  input: "gradients/embedding/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/embedding/dropout/div_grad/mul"
  input: "gradients/embedding/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/embedding/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/embedding/dropout/div_grad/Sum_1"
  input: "gradients/embedding/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/div_grad/Shape"
  op: "Shape"
  input: "embedding/embedding_lookup_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/embedding/dropout_1/div_grad/Shape"
  input: "gradients/embedding/dropout_1/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/embedding/dropout_1/mul_grad/Reshape"
  input: "embedding/dropout_1/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/div_grad/Sum"
  op: "Sum"
  input: "gradients/embedding/dropout_1/div_grad/RealDiv"
  input: "gradients/embedding/dropout_1/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/embedding/dropout_1/div_grad/Sum"
  input: "gradients/embedding/dropout_1/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/div_grad/Neg"
  op: "Neg"
  input: "embedding/embedding_lookup_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/embedding/dropout_1/div_grad/Neg"
  input: "embedding/dropout_1/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/embedding/dropout_1/div_grad/RealDiv_1"
  input: "embedding/dropout_1/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/div_grad/mul"
  op: "Mul"
  input: "gradients/embedding/dropout_1/mul_grad/Reshape"
  input: "gradients/embedding/dropout_1/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/embedding/dropout_1/div_grad/mul"
  input: "gradients/embedding/dropout_1/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/embedding/dropout_1/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/embedding/dropout_1/div_grad/Sum_1"
  input: "gradients/embedding/dropout_1/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\021\000\000\000\000\000\000\200\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "gradients/embedding/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/Size"
  op: "Size"
  input: "input_x1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/embedding/embedding_lookup_grad/Size"
  input: "gradients/embedding/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/embedding/embedding_lookup_grad/ToInt32"
  input: "gradients/embedding/embedding_lookup_grad/strided_slice/stack"
  input: "gradients/embedding/embedding_lookup_grad/strided_slice/stack_1"
  input: "gradients/embedding/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "gradients/embedding/embedding_lookup_grad/ExpandDims"
  input: "gradients/embedding/embedding_lookup_grad/strided_slice"
  input: "gradients/embedding/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients/embedding/dropout/div_grad/Reshape"
  input: "gradients/embedding/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "input_x1"
  input: "gradients/embedding/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\021\000\000\000\000\000\000\200\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/ToInt32"
  op: "Cast"
  input: "gradients/embedding/embedding_lookup_1_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/Size"
  op: "Size"
  input: "input_x2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/embedding/embedding_lookup_1_grad/Size"
  input: "gradients/embedding/embedding_lookup_1_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/embedding/embedding_lookup_1_grad/ToInt32"
  input: "gradients/embedding/embedding_lookup_1_grad/strided_slice/stack"
  input: "gradients/embedding/embedding_lookup_1_grad/strided_slice/stack_1"
  input: "gradients/embedding/embedding_lookup_1_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/embedding/embedding_lookup_1_grad/ExpandDims"
  input: "gradients/embedding/embedding_lookup_1_grad/strided_slice"
  input: "gradients/embedding/embedding_lookup_1_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/embedding/dropout_1/div_grad/Reshape"
  input: "gradients/embedding/embedding_lookup_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding/embedding_lookup_1_grad/Reshape_1"
  op: "Reshape"
  input: "input_x2"
  input: "gradients/embedding/embedding_lookup_1_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "`\021\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_1"
  input: "gradients/strided_slice/stack"
  input: "gradients/strided_slice/stack_1"
  input: "gradients/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/range"
  op: "Range"
  input: "gradients/range/start"
  input: "gradients/strided_slice"
  input: "gradients/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat"
  op: "ConcatV2"
  input: "gradients/loss/L2Loss_grad/mul"
  input: "gradients/embedding/embedding_lookup_grad/Reshape"
  input: "gradients/embedding/embedding_lookup_1_grad/Reshape"
  input: "gradients/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/concat_1"
  op: "ConcatV2"
  input: "gradients/range"
  input: "gradients/embedding/embedding_lookup_grad/Reshape_1"
  input: "gradients/embedding/embedding_lookup_1_grad/Reshape_1"
  input: "gradients/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "gradients/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_1_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_2_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_3_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_6"
  op: "L2Loss"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_7"
  op: "L2Loss"
  input: "gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_4_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_8"
  op: "L2Loss"
  input: "gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_9"
  op: "L2Loss"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_5_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_10"
  op: "L2Loss"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_6_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_11"
  op: "L2Loss"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_7_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_12"
  op: "L2Loss"
  input: "gradients/loss/L2Loss_8_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_8_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_13"
  op: "L2Loss"
  input: "gradients/loss/L2Loss_9_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_9_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_14"
  op: "L2Loss"
  input: "gradients/loss/L2Loss_10_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_10_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_15"
  op: "L2Loss"
  input: "gradients/loss/L2Loss_11_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_11_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_16"
  op: "L2Loss"
  input: "gradients/AddN_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_12_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_17"
  op: "L2Loss"
  input: "gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_18"
  op: "L2Loss"
  input: "gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_13_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_19"
  op: "L2Loss"
  input: "gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_20"
  op: "L2Loss"
  input: "gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_14_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_21"
  op: "L2Loss"
  input: "gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_22"
  op: "L2Loss"
  input: "gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_15_grad/mul"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_23"
  op: "L2Loss"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "global_norm/stack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  input: "global_norm/L2Loss_6"
  input: "global_norm/L2Loss_7"
  input: "global_norm/L2Loss_8"
  input: "global_norm/L2Loss_9"
  input: "global_norm/L2Loss_10"
  input: "global_norm/L2Loss_11"
  input: "global_norm/L2Loss_12"
  input: "global_norm/L2Loss_13"
  input: "global_norm/L2Loss_14"
  input: "global_norm/L2Loss_15"
  input: "global_norm/L2Loss_16"
  input: "global_norm/L2Loss_17"
  input: "global_norm/L2Loss_18"
  input: "global_norm/L2Loss_19"
  input: "global_norm/L2Loss_20"
  input: "global_norm/L2Loss_21"
  input: "global_norm/L2Loss_22"
  input: "global_norm/L2Loss_23"
  attr {
    key: "N"
    value {
      i: 24
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/stack"
  input: "global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "clip_by_global_norm/Const"
  input: "clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/concat"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/AddN_15"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_1_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_1_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/AddN_10"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/AddN_16"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_2_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_2_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/AddN_11"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/AddN_17"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_3_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_3_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_7"
  op: "Mul"
  input: "gradients/AddN_12"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_6"
  op: "Identity"
  input: "clip_by_global_norm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_8"
  op: "Mul"
  input: "gradients/AddN_19"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_4_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_7"
  op: "Identity"
  input: "clip_by_global_norm/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_4_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_9"
  op: "Mul"
  input: "gradients/AddN_13"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_8"
  op: "Identity"
  input: "clip_by_global_norm/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/CNN/conv-maxpool-5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_10"
  op: "Mul"
  input: "gradients/AddN_5"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_5_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_9"
  op: "Identity"
  input: "clip_by_global_norm/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_5_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_11"
  op: "Mul"
  input: "gradients/AddN_3"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_6_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_10"
  op: "Identity"
  input: "clip_by_global_norm/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_6_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_12"
  op: "Mul"
  input: "gradients/AddN_4"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_7_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_11"
  op: "Identity"
  input: "clip_by_global_norm/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_7_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_13"
  op: "Mul"
  input: "gradients/loss/L2Loss_8_grad/mul"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_8_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_12"
  op: "Identity"
  input: "clip_by_global_norm/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_8_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_14"
  op: "Mul"
  input: "gradients/loss/L2Loss_9_grad/mul"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_9_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_14"
  op: "Identity"
  input: "clip_by_global_norm/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_9_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_15"
  op: "Mul"
  input: "gradients/loss/L2Loss_10_grad/mul"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_10_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_16"
  op: "Identity"
  input: "clip_by_global_norm/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_10_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_16"
  op: "Mul"
  input: "gradients/loss/L2Loss_11_grad/mul"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_11_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_18"
  op: "Identity"
  input: "clip_by_global_norm/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_11_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_17"
  op: "Mul"
  input: "gradients/AddN_37"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_12_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_20"
  op: "Identity"
  input: "clip_by_global_norm/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_12_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_18"
  op: "Mul"
  input: "gradients/AddN_32"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_21"
  op: "Identity"
  input: "clip_by_global_norm/mul_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_19"
  op: "Mul"
  input: "gradients/AddN_29"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_13_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_22"
  op: "Identity"
  input: "clip_by_global_norm/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_13_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_20"
  op: "Mul"
  input: "gradients/AddN_28"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_23"
  op: "Identity"
  input: "clip_by_global_norm/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_21"
  op: "Mul"
  input: "gradients/AddN_25"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_14_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_24"
  op: "Identity"
  input: "clip_by_global_norm/mul_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_14_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_22"
  op: "Mul"
  input: "gradients/AddN_20"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_25"
  op: "Identity"
  input: "clip_by_global_norm/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_23"
  op: "Mul"
  input: "gradients/AddN_7"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_15_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_26"
  op: "Identity"
  input: "clip_by_global_norm/mul_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/L2Loss_15_grad/mul"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_24"
  op: "Mul"
  input: "gradients/AddN_6"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_27"
  op: "Identity"
  input: "clip_by_global_norm/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/RNN/bidirectional_rnn/bw/bw/while/bw/multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
}
node {
  name: "embedding/W/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4448
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "embedding/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4448
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "embedding/W/Adam/Assign"
  op: "Assign"
  input: "embedding/W/Adam"
  input: "embedding/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "embedding/W/Adam/read"
  op: "Identity"
  input: "embedding/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "embedding/W/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4448
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "embedding/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4448
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "embedding/W/Adam_1/Assign"
  op: "Assign"
  input: "embedding/W/Adam_1"
  input: "embedding/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "embedding/W/Adam_1/read"
  op: "Identity"
  input: "embedding/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Adam/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-2/W/Adam"
  input: "CNN/conv-maxpool-2/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Adam/read"
  op: "Identity"
  input: "CNN/conv-maxpool-2/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-2/W/Adam_1"
  input: "CNN/conv-maxpool-2/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W/Adam_1/read"
  op: "Identity"
  input: "CNN/conv-maxpool-2/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-2/bias/Adam"
  input: "CNN/conv-maxpool-2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv-maxpool-2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-2/bias/Adam_1"
  input: "CNN/conv-maxpool-2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv-maxpool-2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Adam/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-3/W/Adam"
  input: "CNN/conv-maxpool-3/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Adam/read"
  op: "Identity"
  input: "CNN/conv-maxpool-3/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-3/W/Adam_1"
  input: "CNN/conv-maxpool-3/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W/Adam_1/read"
  op: "Identity"
  input: "CNN/conv-maxpool-3/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-3/bias/Adam"
  input: "CNN/conv-maxpool-3/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv-maxpool-3/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-3/bias/Adam_1"
  input: "CNN/conv-maxpool-3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv-maxpool-3/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Adam/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-4/W/Adam"
  input: "CNN/conv-maxpool-4/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Adam/read"
  op: "Identity"
  input: "CNN/conv-maxpool-4/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-4/W/Adam_1"
  input: "CNN/conv-maxpool-4/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W/Adam_1/read"
  op: "Identity"
  input: "CNN/conv-maxpool-4/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-4/bias/Adam"
  input: "CNN/conv-maxpool-4/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv-maxpool-4/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-4/bias/Adam_1"
  input: "CNN/conv-maxpool-4/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv-maxpool-4/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Adam/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-5/W/Adam"
  input: "CNN/conv-maxpool-5/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Adam/read"
  op: "Identity"
  input: "CNN/conv-maxpool-5/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-5/W/Adam_1"
  input: "CNN/conv-maxpool-5/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W/Adam_1/read"
  op: "Identity"
  input: "CNN/conv-maxpool-5/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias/Adam/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-5/bias/Adam"
  input: "CNN/conv-maxpool-5/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias/Adam/read"
  op: "Identity"
  input: "CNN/conv-maxpool-5/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias/Adam_1/Assign"
  op: "Assign"
  input: "CNN/conv-maxpool-5/bias/Adam_1"
  input: "CNN/conv-maxpool-5/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias/Adam_1/read"
  op: "Identity"
  input: "CNN/conv-maxpool-5/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
}
node {
  name: "CNN/W/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/W/Adam/Assign"
  op: "Assign"
  input: "CNN/W/Adam"
  input: "CNN/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/W/Adam/read"
  op: "Identity"
  input: "CNN/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
}
node {
  name: "CNN/W/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/W/Adam_1/Assign"
  op: "Assign"
  input: "CNN/W/Adam_1"
  input: "CNN/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/W/Adam_1/read"
  op: "Identity"
  input: "CNN/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
}
node {
  name: "CNN/output/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/output/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/output/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/output/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/output/b/Adam/Assign"
  op: "Assign"
  input: "CNN/output/b/Adam"
  input: "CNN/output/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/output/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/output/b/Adam/read"
  op: "Identity"
  input: "CNN/output/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/output/b"
      }
    }
  }
}
node {
  name: "CNN/output/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/output/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN/output/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/output/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN/output/b/Adam_1/Assign"
  op: "Assign"
  input: "CNN/output/b/Adam_1"
  input: "CNN/output/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/output/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN/output/b/Adam_1/read"
  op: "Identity"
  input: "CNN/output/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/output/b"
      }
    }
  }
}
node {
  name: "CNN_1/output/b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN_1/output/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN_1/output/b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN_1/output/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN_1/output/b/Adam/Assign"
  op: "Assign"
  input: "CNN_1/output/b/Adam"
  input: "CNN_1/output/b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN_1/output/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN_1/output/b/Adam/read"
  op: "Identity"
  input: "CNN_1/output/b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN_1/output/b"
      }
    }
  }
}
node {
  name: "CNN_1/output/b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN_1/output/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "CNN_1/output/b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN_1/output/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "CNN_1/output/b/Adam_1/Assign"
  op: "Assign"
  input: "CNN_1/output/b/Adam_1"
  input: "CNN_1/output/b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN_1/output/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "CNN_1/output/b/Adam_1/read"
  op: "Identity"
  input: "CNN_1/output/b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN_1/output/b"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 228
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 228
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/Unique"
  op: "Unique"
  input: "gradients/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam/update_embedding/W/Shape"
  op: "Shape"
  input: "Adam/update_embedding/W/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam/update_embedding/W/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/strided_slice"
  op: "StridedSlice"
  input: "Adam/update_embedding/W/Shape"
  input: "Adam/update_embedding/W/strided_slice/stack"
  input: "Adam/update_embedding/W/strided_slice/stack_1"
  input: "Adam/update_embedding/W/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Adam/update_embedding/W/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  input: "Adam/update_embedding/W/Unique:1"
  input: "Adam/update_embedding/W/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/sub"
  op: "Sub"
  input: "Adam/update_embedding/W/sub/x"
  input: "beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/Sqrt"
  op: "Sqrt"
  input: "Adam/update_embedding/W/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/mul"
  op: "Mul"
  input: "ExponentialDecay"
  input: "Adam/update_embedding/W/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/sub_1"
  op: "Sub"
  input: "Adam/update_embedding/W/sub_1/x"
  input: "beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/truediv"
  op: "RealDiv"
  input: "Adam/update_embedding/W/mul"
  input: "Adam/update_embedding/W/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/sub_2"
  op: "Sub"
  input: "Adam/update_embedding/W/sub_2/x"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/mul_1"
  op: "Mul"
  input: "Adam/update_embedding/W/UnsortedSegmentSum"
  input: "Adam/update_embedding/W/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/mul_2"
  op: "Mul"
  input: "embedding/W/Adam/read"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/Assign"
  op: "Assign"
  input: "embedding/W/Adam"
  input: "Adam/update_embedding/W/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_embedding/W/ScatterAdd"
  op: "ScatterAdd"
  input: "embedding/W/Adam"
  input: "Adam/update_embedding/W/Unique"
  input: "Adam/update_embedding/W/mul_1"
  input: "^Adam/update_embedding/W/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_embedding/W/mul_3"
  op: "Mul"
  input: "Adam/update_embedding/W/UnsortedSegmentSum"
  input: "Adam/update_embedding/W/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/sub_3"
  op: "Sub"
  input: "Adam/update_embedding/W/sub_3/x"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/mul_4"
  op: "Mul"
  input: "Adam/update_embedding/W/mul_3"
  input: "Adam/update_embedding/W/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/mul_5"
  op: "Mul"
  input: "embedding/W/Adam_1/read"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/Assign_1"
  op: "Assign"
  input: "embedding/W/Adam_1"
  input: "Adam/update_embedding/W/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_embedding/W/ScatterAdd_1"
  op: "ScatterAdd"
  input: "embedding/W/Adam_1"
  input: "Adam/update_embedding/W/Unique"
  input: "Adam/update_embedding/W/mul_4"
  input: "^Adam/update_embedding/W/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_embedding/W/Sqrt_1"
  op: "Sqrt"
  input: "Adam/update_embedding/W/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/mul_6"
  op: "Mul"
  input: "Adam/update_embedding/W/truediv"
  input: "Adam/update_embedding/W/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/add"
  op: "Add"
  input: "Adam/update_embedding/W/Sqrt_1"
  input: "Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/truediv_1"
  op: "RealDiv"
  input: "Adam/update_embedding/W/mul_6"
  input: "Adam/update_embedding/W/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_embedding/W/AssignSub"
  op: "AssignSub"
  input: "embedding/W"
  input: "Adam/update_embedding/W/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_embedding/W/group_deps"
  op: "NoOp"
  input: "^Adam/update_embedding/W/AssignSub"
  input: "^Adam/update_embedding/W/ScatterAdd"
  input: "^Adam/update_embedding/W/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@embedding/W"
      }
    }
  }
}
node {
  name: "Adam/update_CNN/conv-maxpool-2/W/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv-maxpool-2/W"
  input: "CNN/conv-maxpool-2/W/Adam"
  input: "CNN/conv-maxpool-2/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_CNN/conv-maxpool-2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv-maxpool-2/bias"
  input: "CNN/conv-maxpool-2/bias/Adam"
  input: "CNN/conv-maxpool-2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_CNN/conv-maxpool-3/W/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv-maxpool-3/W"
  input: "CNN/conv-maxpool-3/W/Adam"
  input: "CNN/conv-maxpool-3/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_CNN/conv-maxpool-3/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv-maxpool-3/bias"
  input: "CNN/conv-maxpool-3/bias/Adam"
  input: "CNN/conv-maxpool-3/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_CNN/conv-maxpool-4/W/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv-maxpool-4/W"
  input: "CNN/conv-maxpool-4/W/Adam"
  input: "CNN/conv-maxpool-4/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_CNN/conv-maxpool-4/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv-maxpool-4/bias"
  input: "CNN/conv-maxpool-4/bias/Adam"
  input: "CNN/conv-maxpool-4/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_CNN/conv-maxpool-5/W/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv-maxpool-5/W"
  input: "CNN/conv-maxpool-5/W/Adam"
  input: "CNN/conv-maxpool-5/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_CNN/conv-maxpool-5/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/conv-maxpool-5/bias"
  input: "CNN/conv-maxpool-5/bias/Adam"
  input: "CNN/conv-maxpool-5/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/conv-maxpool-5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_CNN/W/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/W"
  input: "CNN/W/Adam"
  input: "CNN/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_CNN/output/b/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN/output/b"
  input: "CNN/output/b/Adam"
  input: "CNN/output/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/output/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_CNN_1/output/b/ApplyAdam"
  op: "ApplyAdam"
  input: "CNN_1/output/b"
  input: "CNN_1/output/b/Adam"
  input: "CNN_1/output/b/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN_1/output/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_embedding/W/group_deps"
  input: "^Adam/update_CNN/conv-maxpool-2/W/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-2/bias/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-3/W/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-3/bias/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-4/W/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-4/bias/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-5/W/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-5/bias/ApplyAdam"
  input: "^Adam/update_CNN/W/ApplyAdam"
  input: "^Adam/update_CNN/output/b/ApplyAdam"
  input: "^Adam/update_CNN_1/output/b/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_embedding/W/group_deps"
  input: "^Adam/update_CNN/conv-maxpool-2/W/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-2/bias/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-3/W/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-3/bias/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-4/W/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-4/bias/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-5/W/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-5/bias/ApplyAdam"
  input: "^Adam/update_CNN/W/ApplyAdam"
  input: "^Adam/update_CNN/output/b/ApplyAdam"
  input: "^Adam/update_CNN_1/output/b/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CNN/W"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/update_embedding/W/group_deps"
  input: "^Adam/update_CNN/conv-maxpool-2/W/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-2/bias/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-3/W/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-3/bias/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-4/W/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-4/bias/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-5/W/ApplyAdam"
  input: "^Adam/update_CNN/conv-maxpool-5/bias/ApplyAdam"
  input: "^Adam/update_CNN/W/ApplyAdam"
  input: "^Adam/update_CNN/output/b/ApplyAdam"
  input: "^Adam/update_CNN_1/output/b/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "embedding/W_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "embedding/W_0/grad/hist"
      }
    }
  }
}
node {
  name: "embedding/W_0/grad/hist/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "embedding/W_0/grad/hist/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "embedding/W_0/grad/hist/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "embedding/W_0/grad/hist/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_1"
  input: "embedding/W_0/grad/hist/strided_slice/stack"
  input: "embedding/W_0/grad/hist/strided_slice/stack_1"
  input: "embedding/W_0/grad/hist/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "embedding/W_0/grad/hist/values"
  op: "UnsortedSegmentSum"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  input: "gradients/concat_1"
  input: "embedding/W_0/grad/hist/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "embedding/W_0/grad/hist"
  op: "HistogramSummary"
  input: "embedding/W_0/grad/hist/tag"
  input: "embedding/W_0/grad/hist/values"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "zero_fraction/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "zero_fraction/strided_slice"
  op: "StridedSlice"
  input: "gradients/Shape_1"
  input: "zero_fraction/strided_slice/stack"
  input: "zero_fraction/strided_slice/stack_1"
  input: "zero_fraction/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "zero_fraction/value"
  op: "UnsortedSegmentSum"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  input: "gradients/concat_1"
  input: "zero_fraction/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "zero_fraction/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction/Equal"
  op: "Equal"
  input: "zero_fraction/value"
  input: "zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction/Cast"
  op: "Cast"
  input: "zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction/Mean"
  op: "Mean"
  input: "zero_fraction/Cast"
  input: "zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "embedding/W_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "embedding/W_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "embedding/W_0/grad/sparsity"
  op: "ScalarSummary"
  input: "embedding/W_0/grad/sparsity/tags"
  input: "zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-2/W_0/grad/hist"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W_0/grad/hist"
  op: "HistogramSummary"
  input: "CNN/conv-maxpool-2/W_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_1/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_1/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  input: "zero_fraction_1/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_1/Cast"
  op: "Cast"
  input: "zero_fraction_1/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_1/Mean"
  op: "Mean"
  input: "zero_fraction_1/Cast"
  input: "zero_fraction_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-2/W_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/W_0/grad/sparsity"
  op: "ScalarSummary"
  input: "CNN/conv-maxpool-2/W_0/grad/sparsity/tags"
  input: "zero_fraction_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-2/bias_0/grad/hist"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias_0/grad/hist"
  op: "HistogramSummary"
  input: "CNN/conv-maxpool-2/bias_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_2/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_2/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  input: "zero_fraction_2/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_2/Cast"
  op: "Cast"
  input: "zero_fraction_2/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction_2/Mean"
  op: "Mean"
  input: "zero_fraction_2/Cast"
  input: "zero_fraction_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-2/bias_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-2/bias_0/grad/sparsity"
  op: "ScalarSummary"
  input: "CNN/conv-maxpool-2/bias_0/grad/sparsity/tags"
  input: "zero_fraction_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-3/W_0/grad/hist"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W_0/grad/hist"
  op: "HistogramSummary"
  input: "CNN/conv-maxpool-3/W_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_3/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_3/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  input: "zero_fraction_3/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_3/Cast"
  op: "Cast"
  input: "zero_fraction_3/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_3/Mean"
  op: "Mean"
  input: "zero_fraction_3/Cast"
  input: "zero_fraction_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-3/W_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/W_0/grad/sparsity"
  op: "ScalarSummary"
  input: "CNN/conv-maxpool-3/W_0/grad/sparsity/tags"
  input: "zero_fraction_3/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-3/bias_0/grad/hist"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias_0/grad/hist"
  op: "HistogramSummary"
  input: "CNN/conv-maxpool-3/bias_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_4/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_4/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  input: "zero_fraction_4/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_4/Cast"
  op: "Cast"
  input: "zero_fraction_4/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction_4/Mean"
  op: "Mean"
  input: "zero_fraction_4/Cast"
  input: "zero_fraction_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-3/bias_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-3/bias_0/grad/sparsity"
  op: "ScalarSummary"
  input: "CNN/conv-maxpool-3/bias_0/grad/sparsity/tags"
  input: "zero_fraction_4/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-4/W_0/grad/hist"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W_0/grad/hist"
  op: "HistogramSummary"
  input: "CNN/conv-maxpool-4/W_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_5/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_5/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  input: "zero_fraction_5/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_5/Cast"
  op: "Cast"
  input: "zero_fraction_5/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_5/Mean"
  op: "Mean"
  input: "zero_fraction_5/Cast"
  input: "zero_fraction_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-4/W_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/W_0/grad/sparsity"
  op: "ScalarSummary"
  input: "CNN/conv-maxpool-4/W_0/grad/sparsity/tags"
  input: "zero_fraction_5/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-4/bias_0/grad/hist"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias_0/grad/hist"
  op: "HistogramSummary"
  input: "CNN/conv-maxpool-4/bias_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_6/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_6/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  input: "zero_fraction_6/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_6/Cast"
  op: "Cast"
  input: "zero_fraction_6/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction_6/Mean"
  op: "Mean"
  input: "zero_fraction_6/Cast"
  input: "zero_fraction_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-4/bias_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-4/bias_0/grad/sparsity"
  op: "ScalarSummary"
  input: "CNN/conv-maxpool-4/bias_0/grad/sparsity/tags"
  input: "zero_fraction_6/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-5/W_0/grad/hist"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W_0/grad/hist"
  op: "HistogramSummary"
  input: "CNN/conv-maxpool-5/W_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_7/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_7/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_7"
  input: "zero_fraction_7/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_7/Cast"
  op: "Cast"
  input: "zero_fraction_7/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_7/Mean"
  op: "Mean"
  input: "zero_fraction_7/Cast"
  input: "zero_fraction_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-5/W_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/W_0/grad/sparsity"
  op: "ScalarSummary"
  input: "CNN/conv-maxpool-5/W_0/grad/sparsity/tags"
  input: "zero_fraction_7/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-5/bias_0/grad/hist"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias_0/grad/hist"
  op: "HistogramSummary"
  input: "CNN/conv-maxpool-5/bias_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_8/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_8/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_8"
  input: "zero_fraction_8/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_8/Cast"
  op: "Cast"
  input: "zero_fraction_8/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction_8/Mean"
  op: "Mean"
  input: "zero_fraction_8/Cast"
  input: "zero_fraction_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/conv-maxpool-5/bias_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "CNN/conv-maxpool-5/bias_0/grad/sparsity"
  op: "ScalarSummary"
  input: "CNN/conv-maxpool-5/bias_0/grad/sparsity/tags"
  input: "zero_fraction_8/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/W_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/W_0/grad/hist"
      }
    }
  }
}
node {
  name: "CNN/W_0/grad/hist"
  op: "HistogramSummary"
  input: "CNN/W_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_9/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_9/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_9"
  input: "zero_fraction_9/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_9/Cast"
  op: "Cast"
  input: "zero_fraction_9/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_9/Mean"
  op: "Mean"
  input: "zero_fraction_9/Cast"
  input: "zero_fraction_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "CNN/W_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/W_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "CNN/W_0/grad/sparsity"
  op: "ScalarSummary"
  input: "CNN/W_0/grad/sparsity/tags"
  input: "zero_fraction_9/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN/output/b_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/output/b_0/grad/hist"
      }
    }
  }
}
node {
  name: "CNN/output/b_0/grad/hist"
  op: "HistogramSummary"
  input: "CNN/output/b_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_10/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_10/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_10"
  input: "zero_fraction_10/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_10/Cast"
  op: "Cast"
  input: "zero_fraction_10/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction_10/Mean"
  op: "Mean"
  input: "zero_fraction_10/Cast"
  input: "zero_fraction_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "CNN/output/b_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN/output/b_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "CNN/output/b_0/grad/sparsity"
  op: "ScalarSummary"
  input: "CNN/output/b_0/grad/sparsity/tags"
  input: "zero_fraction_10/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "CNN_1/output/b_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN_1/output/b_0/grad/hist"
      }
    }
  }
}
node {
  name: "CNN_1/output/b_0/grad/hist"
  op: "HistogramSummary"
  input: "CNN_1/output/b_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_11/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_11/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_11"
  input: "zero_fraction_11/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_11/Cast"
  op: "Cast"
  input: "zero_fraction_11/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_11/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction_11/Mean"
  op: "Mean"
  input: "zero_fraction_11/Cast"
  input: "zero_fraction_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "CNN_1/output/b_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "CNN_1/output/b_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "CNN_1/output/b_0/grad/sparsity"
  op: "ScalarSummary"
  input: "CNN_1/output/b_0/grad/sparsity/tags"
  input: "zero_fraction_11/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/hist"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/hist"
  op: "HistogramSummary"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_12/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_12/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_12"
  input: "zero_fraction_12/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_12/Cast"
  op: "Cast"
  input: "zero_fraction_12/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_12/Mean"
  op: "Mean"
  input: "zero_fraction_12/Cast"
  input: "zero_fraction_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/sparsity"
  op: "ScalarSummary"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/sparsity/tags"
  input: "zero_fraction_12/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/hist"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/hist"
  op: "HistogramSummary"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_13/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_13/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_14"
  input: "zero_fraction_13/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_13/Cast"
  op: "Cast"
  input: "zero_fraction_13/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_13/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_13/Mean"
  op: "Mean"
  input: "zero_fraction_13/Cast"
  input: "zero_fraction_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/sparsity"
  op: "ScalarSummary"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/sparsity/tags"
  input: "zero_fraction_13/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/hist"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/hist"
  op: "HistogramSummary"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_14/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_14/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_16"
  input: "zero_fraction_14/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_14/Cast"
  op: "Cast"
  input: "zero_fraction_14/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_14/Mean"
  op: "Mean"
  input: "zero_fraction_14/Cast"
  input: "zero_fraction_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/sparsity"
  op: "ScalarSummary"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/sparsity/tags"
  input: "zero_fraction_14/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/hist"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/hist"
  op: "HistogramSummary"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_15/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_15/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_18"
  input: "zero_fraction_15/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_15/Cast"
  op: "Cast"
  input: "zero_fraction_15/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_15/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_15/Mean"
  op: "Mean"
  input: "zero_fraction_15/Cast"
  input: "zero_fraction_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/sparsity"
  op: "ScalarSummary"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/sparsity/tags"
  input: "zero_fraction_15/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/hist"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/hist"
  op: "HistogramSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_16/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_16/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_20"
  input: "zero_fraction_16/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_16/Cast"
  op: "Cast"
  input: "zero_fraction_16/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_16/Mean"
  op: "Mean"
  input: "zero_fraction_16/Cast"
  input: "zero_fraction_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/sparsity"
  op: "ScalarSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/sparsity/tags"
  input: "zero_fraction_16/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias_0/grad/hist"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias_0/grad/hist"
  op: "HistogramSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_17/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_17/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_21"
  input: "zero_fraction_17/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_17/Cast"
  op: "Cast"
  input: "zero_fraction_17/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_17/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction_17/Mean"
  op: "Mean"
  input: "zero_fraction_17/Cast"
  input: "zero_fraction_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias_0/grad/sparsity"
  op: "ScalarSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias_0/grad/sparsity/tags"
  input: "zero_fraction_17/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/hist"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/hist"
  op: "HistogramSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_18/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_18/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_22"
  input: "zero_fraction_18/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_18/Cast"
  op: "Cast"
  input: "zero_fraction_18/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_18/Mean"
  op: "Mean"
  input: "zero_fraction_18/Cast"
  input: "zero_fraction_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/sparsity"
  op: "ScalarSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/sparsity/tags"
  input: "zero_fraction_18/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/grad/hist"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/grad/hist"
  op: "HistogramSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_19/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_19/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_23"
  input: "zero_fraction_19/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_19/Cast"
  op: "Cast"
  input: "zero_fraction_19/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_19/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction_19/Mean"
  op: "Mean"
  input: "zero_fraction_19/Cast"
  input: "zero_fraction_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/grad/sparsity"
  op: "ScalarSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/grad/sparsity/tags"
  input: "zero_fraction_19/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/hist"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/hist"
  op: "HistogramSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_20/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_20/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_24"
  input: "zero_fraction_20/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_20/Cast"
  op: "Cast"
  input: "zero_fraction_20/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_20/Mean"
  op: "Mean"
  input: "zero_fraction_20/Cast"
  input: "zero_fraction_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/sparsity"
  op: "ScalarSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/sparsity/tags"
  input: "zero_fraction_20/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias_0/grad/hist"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias_0/grad/hist"
  op: "HistogramSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_21/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_21/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_25"
  input: "zero_fraction_21/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_21/Cast"
  op: "Cast"
  input: "zero_fraction_21/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_21/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction_21/Mean"
  op: "Mean"
  input: "zero_fraction_21/Cast"
  input: "zero_fraction_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias_0/grad/sparsity"
  op: "ScalarSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias_0/grad/sparsity/tags"
  input: "zero_fraction_21/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/hist"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/hist"
  op: "HistogramSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_22/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_22/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_26"
  input: "zero_fraction_22/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_22/Cast"
  op: "Cast"
  input: "zero_fraction_22/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_22/Mean"
  op: "Mean"
  input: "zero_fraction_22/Cast"
  input: "zero_fraction_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/sparsity"
  op: "ScalarSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/sparsity/tags"
  input: "zero_fraction_22/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/grad/hist/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/grad/hist"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/grad/hist"
  op: "HistogramSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/grad/hist/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_23/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_23/Equal"
  op: "Equal"
  input: "clip_by_global_norm/clip_by_global_norm/_27"
  input: "zero_fraction_23/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction_23/Cast"
  op: "Cast"
  input: "zero_fraction_23/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "zero_fraction_23/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction_23/Mean"
  op: "Mean"
  input: "zero_fraction_23/Cast"
  input: "zero_fraction_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/grad/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/grad/sparsity"
      }
    }
  }
}
node {
  name: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/grad/sparsity"
  op: "ScalarSummary"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/grad/sparsity/tags"
  input: "zero_fraction_23/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "embedding/W_0/grad/hist"
  input: "embedding/W_0/grad/sparsity"
  input: "CNN/conv-maxpool-2/W_0/grad/hist"
  input: "CNN/conv-maxpool-2/W_0/grad/sparsity"
  input: "CNN/conv-maxpool-2/bias_0/grad/hist"
  input: "CNN/conv-maxpool-2/bias_0/grad/sparsity"
  input: "CNN/conv-maxpool-3/W_0/grad/hist"
  input: "CNN/conv-maxpool-3/W_0/grad/sparsity"
  input: "CNN/conv-maxpool-3/bias_0/grad/hist"
  input: "CNN/conv-maxpool-3/bias_0/grad/sparsity"
  input: "CNN/conv-maxpool-4/W_0/grad/hist"
  input: "CNN/conv-maxpool-4/W_0/grad/sparsity"
  input: "CNN/conv-maxpool-4/bias_0/grad/hist"
  input: "CNN/conv-maxpool-4/bias_0/grad/sparsity"
  input: "CNN/conv-maxpool-5/W_0/grad/hist"
  input: "CNN/conv-maxpool-5/W_0/grad/sparsity"
  input: "CNN/conv-maxpool-5/bias_0/grad/hist"
  input: "CNN/conv-maxpool-5/bias_0/grad/sparsity"
  input: "CNN/W_0/grad/hist"
  input: "CNN/W_0/grad/sparsity"
  input: "CNN/output/b_0/grad/hist"
  input: "CNN/output/b_0/grad/sparsity"
  input: "CNN_1/output/b_0/grad/hist"
  input: "CNN_1/output/b_0/grad/sparsity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/hist"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/sparsity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/hist"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/sparsity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/hist"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/sparsity"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/hist"
  input: "RNN/bidirectional_rnn/fw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/sparsity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/hist"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/grad/sparsity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias_0/grad/hist"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/gates/bias_0/grad/sparsity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/hist"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/grad/sparsity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/grad/hist"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/grad/sparsity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/hist"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/grad/sparsity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias_0/grad/hist"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/gates/bias_0/grad/sparsity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/hist"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/grad/sparsity"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/grad/hist"
  input: "RNN/bidirectional_rnn/bw/multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/grad/sparsity"
  attr {
    key: "N"
    value {
      i: 48
    }
  }
}
node {
  name: "loss_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_1"
      }
    }
  }
}
node {
  name: "loss_1"
  op: "ScalarSummary"
  input: "loss_1/tags"
  input: "loss/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "F1-score/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "F1-score"
      }
    }
  }
}
node {
  name: "F1-score"
  op: "ScalarSummary"
  input: "F1-score/tags"
  input: "F1_score"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Merge_1/MergeSummary"
  op: "MergeSummary"
  input: "loss_1"
  input: "F1-score"
  input: "Merge/MergeSummary"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
}
node {
  name: "Merge_2/MergeSummary"
  op: "MergeSummary"
  input: "loss_1"
  input: "F1-score"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
versions {
  producer: 24
}
